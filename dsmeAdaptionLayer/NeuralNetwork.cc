/*
 * openDSME
 *
 * Implementation of the Deterministic & Synchronous Multi-channel Extension (DSME)
 * described in the IEEE 802.15.4-2015 standard
 *
 * Authors: Florian Kauer <florian.kauer@tuhh.de>
 *          Maximilian Koestler <maximilian.koestler@tuhh.de>
 *          Sandrina Backhauss <sandrina.backhauss@tuhh.de>
 *
 * Based on
 *          DSME Implementation for the INET Framework
 *          Tobias Luebkert <tobias.luebkert@tuhh.de>
 *
 * Copyright (c) 2015, Institute of Telematics, Hamburg University of Technology
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "./NeuralNetwork.h"

namespace dsme {

/******** Layer 0 ********/
static const float l0_weights_array[60] {
    3.40971327,5.87461472,-1.60526752,
    -4.63001871,-4.45365381,1.61229253,
    -0.14019680,3.10043693,-1.41651511,
    -5.08564281,-4.30234051,0.97484702,
    2.61335254,6.65361500,-1.97733152,
    3.45840788,7.61284447,-1.73595846,
    -7.61556816,-4.90003872,-2.03530455,
    4.37700510,6.69167566,-1.34870112,
    -3.68424273,-3.83531547,1.60598087,
    5.11093569,7.94993544,-1.28664458,
    3.50291729,7.04640675,-1.83701968,
    3.45187545,6.08703184,-1.58441854,
    5.56006050,8.29087162,-1.52886176,
    0.36864603,-0.85430664,2.62802076,
    -5.19205809,-4.48405266,1.64322174,
    0.99504447,5.07863283,-2.08086681,
    -5.16415262,-4.42421055,1.45761812,
    4.04114437,7.37103081,-1.81137383,
    3.30011320,6.44499207,-1.59571195,
    -4.07025719,-4.15458679,1.57381737,
};
static float l0_bias_array[20] {
    -0.13048823,0.35785541,-0.24758112,0.44049335,0.25925395,0.14095506,0.64663899,-0.19355708,0.20069517,-0.14073043,0.14336877,-0.10122349,-0.02521585,-0.45139125,0.15224279,0.43335193,0.26863822,0.09299802,0.01482648,0.28771019
};
static float l0_output_array[20];

static const quicknet::matrix_t l0_weights{20,3,l0_weights_array};
static const quicknet::vector_t l0_bias{20,l0_bias_array};
static quicknet::vector_t l0_output{20,l0_output_array};

/******** Layer 1 ********/
static const float l1_weights_array[400] {
    -1.20615768,1.29260099,-0.42554456,0.81999063,-1.50492191,-1.21482503,-1.29077470,-0.36408016,0.44397724,-1.03562117,-1.42799520,-1.14125478,-1.30114257,1.13958931,1.26013315,-1.99823058,0.92466736,-1.26195621,-1.02274144,1.15027094,
    0.90076077,-0.40088326,0.66753262,-0.03667590,1.05044019,1.13291430,1.07769096,0.54367965,-0.27352846,0.89074880,0.49404374,0.86420959,1.08739924,-0.35745186,-0.52945685,0.49955761,-0.11733487,0.42391962,0.92533219,-0.66001195,
    -1.17168510,0.68270391,0.22936441,0.88399798,-1.32669544,-1.43299413,0.00120074,-1.03047061,0.73899621,-0.92960650,-1.74119163,-0.68241322,-1.76955521,0.42213142,0.95493561,-1.53426969,0.92429340,-1.02426434,-1.26320148,0.94107115,
    -0.87556982,0.79134840,-0.33401033,1.03572834,-1.49386120,-1.44732642,0.29125819,-0.71200532,1.09293818,-1.37056959,-1.02071011,-1.13625133,-1.84493899,0.08209182,1.01113760,-1.04303908,1.09376991,-1.38837469,-1.22760046,0.53011322,
    -0.72649091,0.46105096,0.16318455,0.83995152,-0.01564172,-0.50455803,3.01511478,-0.55550241,0.17843501,-1.03704822,-0.54882032,-0.24838285,-1.43061578,-1.56000173,0.32260495,0.16293932,1.13491893,-0.85877293,-0.65172011,0.50640893,
    1.15179515,-1.45681441,0.56721908,-1.13125360,0.94055969,0.57584900,0.05843289,0.97028852,-1.05306542,1.22142243,0.66166317,0.77993327,1.18214846,-0.52590328,-1.46785986,0.84401661,-1.57218826,1.05664825,0.39158314,-1.42179823,
    -0.54255146,0.14903949,-0.00817664,0.47474816,-0.60464972,-0.84818280,1.20262825,-0.39756200,0.60449362,-0.56165206,-0.44504553,-0.47987285,-0.87509823,-0.03780164,0.49175015,-0.51675725,0.47642532,-0.74606735,-0.47411484,0.28514400,
    -0.96417201,0.76859981,-0.69657421,0.41331318,-1.81705308,-1.15605640,-1.00202882,-1.02138984,0.83335596,-0.61067742,-1.58393145,-0.99268049,-1.32353508,0.67164510,0.70083809,-1.58939445,1.03316307,-1.36697865,-1.17926097,0.80589181,
    0.38528821,-2.33049655,0.42845669,-1.67667341,0.22323753,0.25582474,0.39766413,0.38331351,-2.02729869,-0.00465652,0.61867589,0.24105720,0.68318391,-1.47569978,-1.90033603,0.42103699,-1.94374692,0.37443838,0.40301299,-1.64131725,
    0.75646859,-1.48194051,0.13012962,-1.18892682,0.34285602,1.00677979,-1.37386084,1.10576379,-1.00241339,1.23504794,0.42640755,1.02565324,1.06163526,-0.24822836,-1.53121507,0.33889636,-1.60572386,0.45112473,0.46710244,-0.83203924,
    0.71633887,-0.90767795,0.19853158,-0.67039311,-0.13699663,0.29348072,-1.54074144,0.63428545,-0.70270318,0.89420021,0.63042724,0.62239045,0.90724653,0.14769436,-1.20220816,-0.04793061,-1.06046176,0.33483604,0.54606098,-1.26766372,
    0.84119439,-0.52129060,0.54925478,-0.05851522,0.75431198,0.91013837,0.46519673,0.73084831,-0.53384155,1.05134404,0.83956152,0.57023966,1.25847673,-0.17760308,-0.26481774,0.66901726,-0.37862465,0.86650550,0.65178031,-0.32043332,
    0.34938103,-0.22954488,0.09005463,0.14289813,0.90552574,0.61720824,0.30141410,0.99729133,0.08606564,0.84191298,0.95838606,0.64985919,1.14206409,-0.02464648,-0.45987415,0.80216259,-0.49283895,0.57491952,0.47255149,0.21153678,
    0.68968159,-0.07724135,0.34375346,0.09413250,0.83127159,0.27882296,1.83947158,-0.07527310,-0.36178327,-0.11772716,0.23220126,0.39451161,-0.06272046,-0.62352484,-0.66602486,0.78840494,-0.46262622,0.36337686,0.25543445,-0.53004360,
    -0.41920540,1.42834711,0.60447806,1.66992259,-0.83376610,-0.56672418,2.92658877,-1.23960328,0.84780514,-1.45827448,-0.94739819,-0.88307714,-1.71876049,-1.32630014,1.71330881,0.31405374,1.68049526,-0.86362708,-0.58948064,1.38424313,
    -0.54101998,2.87733698,-0.51864398,2.78832293,-0.54642504,-0.35784653,0.07281589,-0.35801047,2.64522290,-0.49090382,-0.24536085,-0.68726033,-0.21227197,2.27260661,2.78462672,-0.54104346,3.12290335,-0.16722666,-0.45038223,3.08512950,
    0.37230366,-0.45031756,0.61329496,-0.13738625,0.76293820,0.96597409,1.42138517,0.93756223,-0.64034694,0.79186648,1.09156346,0.85844964,0.61725378,-0.35879964,0.01376727,1.45585024,-0.78569657,0.62724435,0.71539158,-0.48278016,
    -0.62185937,1.45713592,-0.24614897,0.74885154,-0.95368361,-1.01170814,-0.67546493,-0.69537544,0.89605671,-0.51420790,-1.32688069,-0.84433109,-1.31780875,1.36641192,1.56068277,-0.76350945,0.96644765,-1.17556632,-1.00682282,1.52135515,
    -0.90601194,1.00741124,-0.15783325,0.72599691,-1.26350474,-0.83599627,-1.26565063,-0.44258440,1.19911385,-0.01708032,-1.09865713,-0.62694955,-0.44965222,1.74953008,1.20562696,-0.89974350,1.42549324,-1.14859569,-0.39044437,1.03742290,
    1.06762636,-0.34104824,0.02266167,-0.20401846,0.81157649,0.90098435,0.56123465,0.48125035,-0.63072705,0.68256110,0.83736736,1.03511834,0.95427632,-0.17033720,-0.07499360,1.27882910,-0.06728871,1.08711576,0.37693775,-0.56645769,
};
static float l1_bias_array[20] {
    0.14973553,-0.04828711,0.20302050,0.14795087,0.05083008,-0.42490399,0.05951829,0.12986387,-0.56866050,-0.32994106,-0.24767841,0.03206942,0.18395382,-0.04568490,0.29607815,0.61227059,0.07816814,0.38068008,0.49794230,-0.04578345
};
static float l1_output_array[20];

static const quicknet::matrix_t l1_weights{20,20,l1_weights_array};
static const quicknet::vector_t l1_bias{20,l1_bias_array};
static quicknet::vector_t l1_output{20,l1_output_array};

/******** Layer 2 ********/
static const float l2_weights_array[400] {
    1.47605860,-0.42186490,1.22457898,1.40493393,-0.15219647,0.33414373,0.35781616,1.00846982,1.84501886,1.30495691,0.41179913,-0.25752077,-0.65988541,-0.23367137,-1.11453009,-0.74688363,-0.35247335,0.62921309,0.07185545,-0.47524613,
    1.97082615,-1.45700097,1.36435533,1.60200369,-0.20823033,-1.30133605,-0.02115105,1.99790227,-1.51856899,-1.36876464,-1.25803292,-1.28241944,-1.08817661,-1.14044476,-0.19483903,0.00069168,-1.67339039,0.85995460,-0.34714469,-1.18687499,
    1.95956182,-0.61698502,1.48231804,1.84701931,-0.31013063,0.34562978,0.49606955,2.08621550,-0.13695221,0.40350392,0.06038234,0.01394488,0.26912457,-0.52476627,-0.50253642,-0.11693201,-0.30302715,1.28191853,0.32479495,-0.52814591,
    0.59247470,-0.43093491,1.19170201,1.00905609,0.35531384,-0.16545533,0.25119129,0.51742822,0.77369070,0.37034637,0.14291793,-0.01437832,-0.00081751,0.50309163,-0.13051765,-0.98515058,-0.22258130,0.19681723,-0.47635290,-0.01460604,
    0.41375878,0.07608862,-0.02341718,-0.53870255,0.34104440,-0.22398317,-0.29312834,0.44551748,-1.45228922,-0.37250057,-0.03577187,-0.22796814,-0.13380924,0.31261382,0.87816429,2.44263649,-0.14053966,0.00582942,0.16579208,0.39020136,
    -1.65607953,1.38028860,-1.35620487,-1.23321176,0.03505515,1.28926456,-0.04797915,-1.79283047,1.16060066,1.29311156,0.82604069,1.41315734,0.74299198,1.11841655,0.20782101,0.40334535,1.79665065,-0.19458367,0.56171477,0.81745714,
    -0.83444226,0.09912357,-0.38612279,-0.35219437,0.27242312,-0.21553376,-0.11497643,-0.94624913,0.00712771,-0.44425714,-0.32401410,0.04091772,0.16773684,0.50749302,-0.12446125,-0.56818670,0.70152599,-0.63851631,0.10338558,-0.04648411,
    0.92409217,-0.08368865,0.90250725,1.40402091,2.89134240,-1.28850877,2.36270857,0.50711733,-3.70339251,-1.57268000,-1.94104409,0.01982650,0.18906070,0.16717699,4.86180353,2.10710692,-0.00727783,2.26700664,2.44011140,0.11199347,
    -1.85069478,0.44347802,-0.45219430,-0.12125225,0.16875005,-1.51744568,0.09064056,-1.47544253,1.32179427,-0.43004194,0.49964035,-0.31491718,-0.22539659,-0.03335421,-0.26444620,-0.84413117,0.35493663,0.62718916,0.94602865,0.33114612,
    1.18376827,-0.14583689,0.95465535,0.41631547,0.06643899,0.51107639,-0.15699375,0.72150284,1.57153165,0.84279770,0.93539625,-0.34798956,-0.31459412,-0.48085830,-0.72630018,-2.05844688,-0.53539830,0.16102470,-0.38950586,-0.11885048,
    -0.45818239,-0.51658076,-0.27541611,0.42158896,1.89773095,-0.83689207,0.14130683,-0.12499767,-0.65315521,-1.97715235,-2.22055960,-0.43211868,-0.04581004,0.58687550,1.77703536,0.26855290,-0.04501367,-0.76747918,-0.55645072,-0.36761186,
    0.83964664,-0.19778726,0.18329526,0.07699983,-1.65289700,0.71981674,-0.39001474,0.54507065,3.37427783,2.33843994,2.63174510,-0.41164160,-0.15138370,-0.30550164,-2.29576397,-0.79951602,-0.15102810,0.45535818,-0.27874133,-0.50038481,
    0.42425099,-0.24290074,-0.08527461,-0.15573975,-0.62205446,-0.41478747,-0.89275128,-0.05134512,-0.48676565,-0.67458987,-0.09482808,-0.03978462,-0.62375933,-0.26520991,-0.14552402,-0.47541010,-0.57264507,-0.48601893,-0.89118409,-0.13851047,
    -1.06224072,-0.43964949,-0.87338841,-0.37897125,-0.10409871,-2.06671762,-0.27899718,-0.93051273,-1.07572269,-1.35801363,-0.32593298,-0.04125900,-0.23735790,-0.22519878,0.01706262,0.35926202,-0.47768942,0.55010104,0.29330927,-0.13541868,
    -2.20922470,0.77115941,-2.48398662,-2.34273052,-0.81763351,2.89617038,-1.01393652,-2.44619679,3.64738679,2.80064344,1.65208101,0.44931823,0.08200201,0.52212733,-1.13208377,-0.59639919,0.37805438,-2.30703497,-1.88009381,0.59223443,
    0.12607296,-0.24721237,0.11544070,0.03699393,-0.30956334,-0.76426953,-0.60120952,0.11153434,-0.13505049,-0.41752875,-0.23051445,-0.92574739,-0.78050518,-0.65099764,-0.27739683,-0.08880141,-0.73228830,0.13299727,-0.16587530,-0.64577156,
    -0.85621881,0.34825724,0.18296948,0.07418853,-0.92839879,0.38110769,-0.28867638,-0.95461607,0.16306183,1.71627128,1.17779338,0.05149833,0.17187774,-0.47217047,-1.73422372,-0.11565578,0.14889506,0.27257642,0.11093184,-0.36456728,
    5.07508612,-0.98224396,4.31680727,3.95651889,-1.00410891,0.25908250,0.20425889,4.42539454,1.51025808,1.14016879,0.32246765,-0.93321073,-0.05191889,-0.27754214,-1.05630612,-0.95025879,-0.75876468,2.33292985,0.13904300,-0.45890826,
    2.17176127,-0.32898298,2.97100019,3.08196831,1.63891661,-2.47706366,1.08095813,2.28289533,-2.79192114,-3.16494298,-1.81119633,-0.77671307,-0.24040227,-0.09119114,1.11312139,0.69880062,-0.72151041,2.15496826,0.76497620,-0.33757669,
    -0.30573437,0.06983475,0.17790174,0.36840224,0.38466454,-0.87648135,0.43077883,-0.22295709,1.21376848,-0.36938277,0.55656332,-0.14444391,-0.38854370,0.48828495,0.38138139,-0.58067209,0.29122007,0.24104902,0.09000381,-0.46640974,
};
static float l2_bias_array[20] {
    -0.26914477,-0.68859369,-0.06748845,-0.23993127,0.19268371,0.60947829,0.05666586,0.23642507,0.07076665,-0.27227166,-0.29473853,-0.41233063,-0.42616209,-0.14931665,0.05553149,-0.38654283,-0.05229369,-0.25024700,0.01975326,-0.02279474
};
static float l2_output_array[20];

static const quicknet::matrix_t l2_weights{20,20,l2_weights_array};
static const quicknet::vector_t l2_bias{20,l2_bias_array};
static quicknet::vector_t l2_output{20,l2_output_array};

/******** Layer 3 ********/
static const float l3_weights_array[300] {
    -1.19821823,0.92499965,-0.17340216,-0.37604052,0.03373269,0.10491443,-0.63675749,0.39466235,-0.99948388,-1.23987412,-0.55026752,-1.53595936,0.23283666,-0.04862963,-0.14295579,0.42550832,0.15734725,-0.41533604,-0.37156382,-0.19453633,
    -1.02521610,-0.60730141,-1.33967698,-1.35643804,-1.66297817,-2.72445107,-2.25899434,-1.93386304,-1.14030969,-0.96628201,-1.38455164,-1.12863326,-0.70844960,-1.19658542,-1.32693803,-0.58767480,-1.10612941,-1.00229502,-1.36266935,-1.83058906,
    -1.03996432,-0.12729469,-0.34251270,-0.22024034,0.12240314,0.51225489,0.28406718,1.07728720,-1.00953496,-1.42432475,0.53206527,-4.63625860,-0.24111333,-0.38890785,-0.14492619,-0.01596483,-1.84230137,-0.15638912,-0.95089179,-0.27613798,
    0.34012371,-1.18592560,-0.04426744,0.40300360,-0.44041327,0.51821232,0.33107230,-0.56850815,0.33948812,0.59676623,0.58601862,0.04188237,-0.26551250,0.13713187,0.01242605,-0.38686311,0.03120615,0.41215968,-0.03546822,0.68117839,
    0.30589053,-0.32153499,0.42683300,0.43708602,-0.24581665,0.22037548,0.08790284,0.07167095,0.14592782,0.23173009,-0.05248177,-0.19681345,0.06702247,-0.44398049,0.67168647,0.04891484,0.35803461,0.36467388,0.05644590,0.28848216,
    0.32896629,-0.94154388,-0.10608695,0.00332713,-0.00334790,0.02382568,0.18908408,-0.08687350,0.17421027,-0.39455402,0.36394051,0.64073050,0.04348475,0.48301706,-0.50063264,-0.21836594,0.67819089,0.50422388,0.29265320,-0.13085344,
    -0.16588786,-0.21846297,-0.41537043,-0.35554257,-0.26119164,-0.21556817,0.38647142,-0.30484074,1.33048248,1.02978981,-0.30429122,-0.63897920,0.11454044,0.25079769,-0.91050017,0.19151510,0.10265953,0.66861194,-0.17575362,0.36309314,
    -0.20248030,0.56123763,0.05628051,-0.07828169,0.37337673,0.01893581,-0.10998688,0.55969840,-0.90407044,-0.15863636,-0.04514794,-0.06540527,0.38104236,0.16067046,0.32633951,-0.10959714,-0.47633556,0.28959730,0.07463002,-0.32293338,
    -0.43726823,-1.34716964,0.04013079,0.22257999,-0.02213769,0.05582855,-0.59382665,-0.37411165,0.19778779,-0.51233339,-0.15805627,0.66091496,-0.27601716,0.61887592,-1.91484439,0.27887732,0.47580379,0.47919634,0.83450109,0.18536435,
    0.14078847,-0.63712120,0.32980400,-0.40866882,0.12241645,0.17829449,0.05360877,-0.98350751,-0.40137872,-0.22052070,-0.42175397,0.83719826,-0.20189446,0.13133068,-0.60964525,0.68731904,0.38706842,-0.29955313,0.55344433,0.04922893,
    0.72128630,0.32777590,0.03971507,0.26419666,-0.26461923,-0.17553100,-0.21802744,-0.13354315,-0.89257312,0.47635630,0.05843910,0.15072112,0.17274989,-0.68324524,0.29825750,0.20595865,-0.56620109,0.30549616,0.66995680,-0.21437983,
    -0.49013650,-6.29020739,-0.44067976,-0.45217314,-0.43810761,0.46319455,0.38610789,-1.27530587,0.28773570,-1.15373647,-1.73496866,-0.06103764,-0.44758418,0.12572266,0.67463654,-0.56843191,0.35343245,-0.70506120,-2.76461983,-0.46406984,
    -0.01375317,-2.11875081,-0.89880985,-0.37681007,-1.08828628,0.40953797,0.11754952,1.36788130,0.54916257,0.60576904,-2.00700426,-0.74245697,-0.52164847,-1.27744949,0.17362978,-0.61862248,-0.20448682,-0.12936215,-10.71577930,0.07300796,
    0.35134441,2.09238839,-0.61917144,0.22361256,0.39235198,-1.24696410,0.06875835,0.59048390,0.47175124,0.90001822,0.47836494,0.02379332,0.10442670,0.07056645,-0.50201535,0.07816622,-0.66787255,-1.37800860,-0.10071155,0.72096509,
    -0.64733553,-0.72425407,-1.54715323,-1.47863495,-1.89210641,-2.98159266,-2.11380696,-1.75247741,-1.31357598,-0.60774094,-0.90235794,-1.22389090,-0.85229087,-0.75801927,-1.40927529,-0.84518844,-0.88906550,-0.94356072,-1.23402750,-1.40801835,
};
static float l3_bias_array[15] {
    -0.15666147,-1.51370621,-0.11546729,0.13694523,0.03033512,0.07164088,-0.08315418,0.10633785,-0.13887629,0.00478500,-0.07345064,-0.05442422,-0.39209884,0.44306543,-1.55076241
};
static float l3_output_array[15];

static const quicknet::matrix_t l3_weights{15,20,l3_weights_array};
static const quicknet::vector_t l3_bias{15,l3_bias_array};
static quicknet::vector_t l3_output{15,l3_output_array};

/******** Network ********/
static quicknet::Layer layers[4] {
    {l0_weights, l0_bias, l0_output, quicknet::quick_sigmoid},
    {l1_weights, l1_bias, l1_output, quicknet::quick_sigmoid},
    {l2_weights, l2_bias, l2_output, quicknet::quick_sigmoid},
    {l3_weights, l3_bias, l3_output, quicknet::quick_softmax},
};

NeuralNetwork::NeuralNetwork() : network{4, layers} {
}

} /* namespace dsme */
