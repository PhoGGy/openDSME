/*
 * openDSME
 *
 * Implementation of the Deterministic & Synchronous Multi-channel Extension (DSME)
 * described in the IEEE 802.15.4-2015 standard
 *
 * Authors: Florian Kauer <florian.kauer@tuhh.de>
 *          Maximilian Koestler <maximilian.koestler@tuhh.de>
 *          Sandrina Backhauss <sandrina.backhauss@tuhh.de>
 *
 * Based on
 *          DSME Implementation for the INET Framework
 *          Tobias Luebkert <tobias.luebkert@tuhh.de>
 *
 * Copyright (c) 2015, Institute of Telematics, Hamburg University of Technology
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "./NeuralNetwork.h"

namespace dsme {

/******** Layer 0 ********/
static const float l0_weights_array[80] {
    5.08492088,-0.96967167,16.07021904,-2.02783704,
    -3.64726377,2.28626180,-14.76485634,1.21336162,
    -3.12041402,-6.85510397,-0.60401475,1.27582920,
    -2.88288617,-4.69636869,-1.82585704,1.89140213,
    4.75491333,-2.80127120,18.36714363,-1.62633073,
    0.65400892,-6.75425673,2.68793035,-2.09123063,
    7.17819405,5.37853003,7.10759068,-1.26642919,
    5.60844135,0.30474827,14.23133850,-1.41501415,
    -3.29169774,1.73307455,-13.38414764,1.17025197,
    0.17289433,8.72423935,-2.28865027,-1.91582596,
    5.63987494,0.80599195,14.46726322,-1.72904527,
    -2.98722720,4.27080154,-13.47892284,1.37203526,
    4.56464195,-1.34345865,17.82138443,-1.76601779,
    -0.02401361,-8.24475098,3.17695975,-1.81051552,
    -3.77654147,2.19150400,-15.72241020,1.80072296,
    5.07795715,-0.78089005,16.44346428,-1.59537685,
    5.47473001,0.06311838,16.53254318,-1.65780020,
    -2.08658624,-4.63612270,-1.70975578,1.35720706,
    -4.64289236,-1.77894866,-7.22910213,0.54401898,
    -3.71752858,-1.11906064,-8.12555695,1.62665570,
};
static float l0_bias_array[20] {
    0.03057468,-0.05461387,-0.02652222,-0.28487250,0.04556917,0.68462437,-0.34385920,-0.47137183,-0.02123258,0.23100451,-0.24417700,-0.34222150,-0.06859539,0.72447497,-0.25040877,-0.21735002,-0.18085086,-0.01305750,0.18989831,-0.10659248
};
static float l0_output_array[20];

static const quicknet::matrix_t l0_weights{20,4,l0_weights_array};
static const quicknet::vector_t l0_bias{20,l0_bias_array};
static quicknet::vector_t l0_output{20,l0_output_array};

/******** Layer 1 ********/
static const float l1_weights_array[400] {
    -1.71899700,0.93332106,0.36310437,0.73129708,-2.52014685,-1.74304056,-0.00089805,-1.14814222,1.30199480,1.24571753,-1.20795429,1.53644133,-1.97002935,-2.31644845,1.61273253,-2.03204584,-1.25666881,0.63659441,0.30065528,0.76354229,
    0.52444333,-8.62800694,-2.55879879,-2.72927904,0.65082741,-3.74029589,0.46274501,0.62377268,-5.93603945,3.38405323,0.71703631,-3.05684924,0.83369815,-4.80019379,-11.09915161,0.50450861,0.39421633,-2.79761744,-2.26751447,-1.78691280,
    0.55768234,0.40835029,-1.26839530,-1.14719617,-0.68626952,-3.83035994,1.15761697,0.60472262,0.34180996,4.32401323,0.77812862,1.19112432,0.00338269,-5.40723705,0.53568316,0.11617854,0.29021460,-0.92350161,-0.53464532,-0.45498744,
    -1.56469297,0.86017376,1.46493888,1.68196642,-1.66900420,0.60489136,-2.34350133,-1.93722665,0.95833552,-0.80578154,-2.19909048,0.89450592,-1.81717360,0.61855787,1.08799279,-1.65776825,-2.29212451,0.86209875,1.19072104,0.78709769,
    1.87064433,-1.09345901,-1.21521318,-1.41169786,2.16667747,0.62209183,1.11816370,1.45340812,-1.13039386,0.84350032,1.33395803,-0.78492469,2.14134407,0.31866580,-1.42657042,1.72974169,1.91799319,-0.75718796,-0.60047275,-1.15100217,
    -0.17237683,0.93820673,-1.52244413,-1.34897518,0.17575811,-3.47279048,0.93034887,0.50870162,0.39276090,3.07200956,0.27318248,1.51934576,0.14585854,-4.71118259,0.71160173,0.55953813,0.47719443,-0.94191444,-0.37134868,-0.49965435,
    2.13287282,-1.23084521,-0.77107430,-0.73306477,2.61816406,1.76753867,0.35799870,1.36521649,-1.31061947,-0.59189087,1.57951653,-1.49573791,2.12462449,1.72005820,-1.65230489,1.52088058,1.56923902,-0.85024691,-0.48657233,-1.26775789,
    -0.93622839,0.72115999,1.88224065,1.46118653,0.14488570,1.67188835,-2.11205792,-1.49267042,0.21544962,-1.71609092,-1.27041113,0.01000395,-0.72016340,2.19234014,0.27006164,-1.07360351,-1.16710973,1.83141935,0.84255701,0.83166391,
    1.45153344,-1.00296652,-1.33114254,-1.79234850,1.39383757,-0.00007049,2.52327919,2.13395476,-0.87399834,2.47410512,2.10971332,-0.12814598,1.88269830,-1.15038562,-1.24073744,1.96481144,1.99640155,-0.94300199,-0.92883617,-0.79292816,
    -1.73441434,1.35133326,0.19313060,0.85772228,-2.22399640,-1.22370017,-0.69422799,-1.22601080,1.25032759,0.88420838,-1.10958743,1.36393487,-2.22896314,-1.52809107,1.74713409,-1.45751059,-1.43455553,0.38329980,0.59369427,0.78211969,
    1.98608506,-1.17633915,-0.92016572,-1.47839177,2.09158564,0.33045900,1.77686560,1.75225866,-0.62202638,1.14376271,1.88014126,-1.25240767,1.78919363,0.00933087,-1.51212895,1.35116518,1.72956371,-0.72999018,-0.69814950,-1.32692826,
    -0.76921952,1.42216527,-0.16883065,0.12097956,-1.57595301,-1.12754071,-0.36906341,-1.26124454,1.37976670,1.67251062,-0.77891004,2.01778460,-1.23442423,-1.53948462,1.25329471,-1.16008866,-0.75828272,0.60289538,0.68195140,1.18155479,
    1.67384851,-1.19419122,-0.61766392,-0.75266248,1.84048164,1.23350191,0.33971265,0.90486741,-1.11075115,-0.14710930,1.54034853,-1.85647428,2.22227287,1.54839134,-1.41480517,1.93964136,1.74432373,-0.84590042,-0.34493816,-0.84745634,
    -0.30868259,4.30857801,1.84059262,2.26384544,-0.47910878,-2.73658919,0.11438537,-0.21459441,4.53998518,2.24566269,0.10389546,6.03537607,-0.73856103,-3.02199244,4.12949133,-0.50722665,-0.23427439,2.38695860,3.26319861,3.62570643,
    1.76665151,-1.30921960,-0.28505757,-0.92646098,1.98380291,2.15339351,0.04397357,1.20486760,-1.18249297,-0.10790485,1.00877166,-1.60047638,1.82330155,1.85568845,-1.35708654,1.29367507,1.07595062,-0.36025393,-0.44556972,-0.83703804,
    -1.27189434,3.96859527,1.53329885,1.04570973,-2.26422977,-0.67500001,-0.57200921,-1.10475338,3.53180981,2.14751720,-1.05946887,3.88413024,-1.81955409,-1.93832755,4.37867594,-1.31696796,-1.19404590,1.69764709,2.77766418,1.97573113,
    -1.43948865,1.69265497,-0.20260917,0.78452671,-2.71140194,-2.17285872,-0.38285840,-1.47705257,0.92699075,1.23736668,-1.21197200,1.92765713,-2.46014524,-2.15423083,1.77811909,-1.42159021,-1.91199183,0.55013335,0.85142362,0.95726568,
    -0.78601646,2.30315924,-0.76963758,0.00151686,-2.44416571,-2.03666925,0.18757038,-1.24796438,2.13094568,2.49429893,-0.79237700,2.31438828,-1.97609639,-2.71830487,2.13706923,-1.34959662,-1.08389568,-0.46926078,1.01391006,0.61099213,
    1.58556318,-0.66394114,-1.33550143,-1.03505242,1.73372841,0.10162286,1.78556836,1.61442578,-0.72774929,1.27385247,1.83922315,-0.83523369,2.23393798,0.04853930,-1.41429353,1.92492700,2.03516340,-1.17182231,-1.31756914,-1.47339821,
    -0.82511663,-0.10036815,1.57215142,1.75199747,-0.75861907,1.40921736,-3.06036663,-1.75495815,0.49763656,-2.12954235,-2.11761260,-0.28311542,-1.26656246,1.90373576,-0.17312460,-1.43909335,-2.00609612,1.36933160,1.07396626,0.95466888,
};
static float l1_bias_array[20] {
    0.33290687,-0.59933484,0.05631673,-0.07510022,-0.21640402,0.03011359,-0.19962306,0.11125456,0.00232287,0.16110022,-0.11626706,0.48437271,-0.31679183,0.98756349,-0.29231754,0.95845270,0.25176272,0.52220637,-0.15823698,-0.36710298
};
static float l1_output_array[20];

static const quicknet::matrix_t l1_weights{20,20,l1_weights_array};
static const quicknet::vector_t l1_bias{20,l1_bias_array};
static quicknet::vector_t l1_output{20,l1_output_array};

/******** Layer 2 ********/
static const float l2_weights_array[400] {
    -2.13068461,1.06435394,8.03719234,-3.77318907,5.20481110,8.29151821,3.93408895,-2.88207412,5.65433550,-2.53692770,5.59476042,-1.56179559,3.35530949,-0.58503085,2.41554499,0.25341702,-2.58172274,-0.46046823,6.10172939,-3.52909899,
    -1.09788597,1.82655191,-2.48717475,-0.07888001,1.09399271,0.47695664,2.23321581,0.56417352,1.34132397,-0.39137411,0.98286539,0.04639607,1.58398092,0.11940952,2.23863435,0.27640069,-1.11143136,0.02118084,1.31405926,0.43334019,
    1.67718220,4.65381145,5.07783461,0.25395140,-0.40006670,3.87291837,-1.69192255,-0.92219388,-0.78910720,0.93372256,-0.59916294,-0.94214910,-0.84805000,-0.64361745,-1.01507735,-1.46739733,2.18461180,-1.79918587,-0.53449494,-0.30451712,
    0.78981304,1.75470090,5.91426802,0.51830316,-0.72243387,3.52517080,-0.77179402,-0.27606678,-0.27679512,0.43078932,-1.01986444,2.57325912,-0.96505004,8.78625774,-0.32874650,6.79955196,0.85343522,3.06339526,-0.34169585,0.47708857,
    0.77766663,-3.61524034,1.83590341,-0.25406495,-0.32961643,-0.61523318,0.00155536,-0.33555275,0.62542862,0.61153144,-0.03631386,0.30160648,-0.44812989,0.53349870,-0.43798390,0.04411096,0.85759211,0.24976845,0.39437801,-0.42835516,
    1.04884100,-0.74279106,-5.25021029,2.17630720,-3.45545626,-5.32234383,-1.93344724,2.16198158,-3.62081742,1.21156585,-3.58679223,0.68057430,-2.44708753,-0.55041873,-1.41807997,-0.01976528,1.11814368,0.16404019,-3.81049228,2.74012232,
    0.87198031,-1.38979709,-4.66551352,2.33928180,-1.86721373,-4.36733627,-0.77661651,2.32214355,-2.18396640,1.10467505,-2.09382010,1.28791535,-1.01800060,0.16364858,-0.30823639,0.10218499,1.22854424,0.90978658,-2.43806720,3.24142027,
    -3.47656536,0.38283098,-3.66751528,-1.40083325,2.83379579,-1.40798163,4.26828432,-0.75414598,2.45555305,-2.72449327,2.60937023,-1.21845520,3.32825065,0.13820502,3.18549824,-0.09668247,-3.71528363,-0.49965286,2.64109445,-0.81056732,
    -3.54433560,-6.96195841,-2.53988361,-6.53813982,0.84710044,-2.56751680,0.59423596,-5.11925220,0.04519319,-4.48226976,0.51155233,-2.40206218,0.58888513,1.59507608,0.38949275,1.14795280,-4.60328913,-1.25213706,0.88767290,-6.86235952,
    -10.61384010,5.99851608,-2.23844028,-5.35890532,1.98674142,-1.73163891,1.95371830,-8.95096874,1.18275321,-9.45332146,1.95142007,-13.36309910,1.84965873,-3.08761120,1.78127789,-10.40814018,-8.99701118,-12.81731129,1.86014187,-6.05601835,
    3.05337930,-0.46310195,3.08897471,2.01935506,-1.65924382,2.98603725,-3.25613761,0.35739064,-0.88883048,2.85708022,-1.55543625,0.80928522,-2.97226000,-0.03584697,-2.71974754,-0.79942316,3.77384496,0.42579842,-1.94288313,0.44571269,
    0.21174301,-2.33561873,-3.77509356,2.23623085,-1.13570642,-4.21740389,-0.45455679,2.26178384,-1.03985167,0.51394784,-1.09028900,0.69582158,-0.02797175,1.12173629,0.19652347,1.02338040,0.15993069,1.38077128,-1.57316434,3.31855583,
    -1.74275684,1.38782275,2.42899370,-0.02858360,-0.24301651,2.62741041,0.05209252,-0.08780210,-0.97843611,-1.47421539,-0.28421581,-0.90231049,-0.56307739,0.12941387,-0.19966966,0.48347354,-2.08481789,0.38801605,-0.88305372,-0.06893143,
    -0.94274896,-0.95240378,-6.42963076,0.51649392,1.00931740,-4.75470972,0.80844122,0.79592329,-0.01782141,-0.78181195,0.81950557,-0.23058434,1.37368584,-1.28109086,1.03671312,-0.56487584,-0.77585864,-0.23605707,0.43677193,1.34150767,
    -3.13379622,0.71152103,-2.66052461,-1.18115234,1.13606548,-0.97254479,1.23554206,-1.23473752,0.69922900,-3.12823534,1.29378700,-5.35891867,0.94344020,-12.22262383,1.33403826,-13.35571098,-2.29783869,-7.91266298,1.17821991,-1.40070581,
    3.77266693,1.21074677,4.81892824,1.63981235,-1.52138329,5.18123198,-1.62110448,-2.20012665,-1.52692676,2.41262245,-1.67003703,2.96094322,-1.93240249,0.00028883,-1.79149175,-0.06465907,4.21876431,3.61965585,-1.80270982,1.94649160,
    -2.25763416,1.97090662,1.60043466,0.85975587,-0.36410004,3.00431442,-0.60065824,-0.54189056,-0.43909675,-1.14686346,-0.44191650,-0.15509826,-0.30360869,-0.10995439,0.03770300,0.41559049,-2.29764724,0.66608942,-0.87187493,0.24913777,
    -3.87959170,2.89192200,4.04925394,-1.26360381,-1.21149480,3.47004509,-0.51587301,-0.69033647,-1.11941957,-2.96987629,-0.84503138,-3.03422356,-1.10021186,1.22268128,-1.12643540,-4.11576557,-3.34167981,-4.51097965,-0.88698256,-0.58671325,
    0.27309930,-3.96219945,-1.42828357,0.82384855,0.20668620,-2.36136532,0.61047047,0.63240099,0.33112770,0.10768162,0.02177122,-0.25676700,0.12561829,1.12615860,0.39059198,0.26551354,0.62873566,-0.47857490,-0.27874514,0.57662255,
    -0.29857475,-2.52433324,-1.47153735,1.89695966,0.40050909,-2.82146478,1.03596246,1.58860493,0.35492238,-0.31410924,0.07514530,0.25687721,0.93967247,0.37981433,0.76616722,1.30201674,-0.76462924,0.38619554,0.44477791,2.37009239,
};
static float l2_bias_array[20] {
    0.21771212,0.32147139,-0.58801174,-0.55101013,0.03396819,-0.28348097,-0.51157230,-0.01878203,0.11266689,0.91328639,-0.47948995,-0.11186589,-0.74534595,0.21125908,0.84936392,-1.37462795,-0.98843175,-1.03387380,0.24531005,0.77251166
};
static float l2_output_array[20];

static const quicknet::matrix_t l2_weights{20,20,l2_weights_array};
static const quicknet::vector_t l2_bias{20,l2_bias_array};
static quicknet::vector_t l2_output{20,l2_output_array};

/******** Layer 3 ********/
static const float l3_weights_array[300] {
    -3.27670074,-0.01651267,1.35255396,0.92044646,0.51808608,2.28180885,-0.84298795,-1.97491562,-31.10996628,-20.39132690,-2.91513443,-2.30476284,2.03586841,1.29840815,-3.44087720,1.72943974,1.29124069,-0.02527263,0.04670321,1.04077172,
    -2.09131289,-1.55145347,-1.19817710,-1.84565294,-0.84839892,-0.48518687,-0.81094378,-1.59317601,-0.88827419,-1.24504495,-0.76573849,-0.79328984,-0.78540349,-0.84445238,-0.86196029,-1.80546200,-0.70470458,-1.00293589,-1.99615502,-1.66091156,
    -3.25514674,0.86752874,-0.70838612,0.94732392,0.57793188,2.13616467,-3.05234742,-1.63424778,-12.53035641,-27.86403465,0.04434789,-2.30875254,1.39306998,3.27037168,-3.48793721,1.40621114,1.58862352,-0.70160431,0.36169416,0.97623473,
    -0.33600256,0.74180061,-1.42851472,0.50846034,0.41657913,3.37494802,-3.81923437,-1.22770011,3.57826948,-6.14959764,-2.85042930,1.68994975,0.20655386,-6.49309731,-16.00399590,0.70971829,0.61958534,1.41471469,0.45243171,0.60499293,
    0.62794691,-1.11106181,0.85648066,0.20929323,0.92517471,-2.80315542,1.36901820,0.30155608,4.02564287,2.59073997,2.87944508,0.17161511,-0.96655786,-1.90705585,-0.65351081,-0.87940568,-0.69896233,0.24724655,0.59311116,-0.29119205,
    0.20917507,0.79784799,0.08166106,0.48588526,-0.71490747,-0.67585760,1.08626461,1.30454838,-4.43788004,-0.12754744,-0.36471850,0.46387854,0.29167378,2.34543729,-2.04682755,0.85647839,0.68431050,1.83524644,-0.31460565,-0.62201780,
    0.51740831,-0.14012186,-1.15222418,-1.59746456,-0.21166791,-4.29119635,-19.53689194,-0.02184978,0.91986156,-0.07986492,-22.31414604,-14.26375389,0.86888129,0.87428385,1.83716512,4.00816250,1.16541648,0.27462462,-0.49359468,-0.28916278,
    0.86650014,0.26450643,1.56995952,0.24786621,0.53508401,-6.25038576,1.72292316,0.30226481,2.15434051,-1.12507033,0.10714513,1.29972649,-0.29498723,-0.95921350,0.78901500,-1.74768221,-1.20645750,-4.35235405,0.10274184,0.26336679,
    0.32425731,0.58041877,-1.42377913,-1.67096663,-3.08050513,-0.81125504,-4.22136688,-0.35091287,-1.99474919,1.15730548,-9.29039669,-24.69221497,-0.63525081,1.97486889,1.77384174,-4.31850672,0.54912078,1.01869905,-2.14517808,-0.42398921,
    0.56990868,0.10370340,-4.30365133,-1.75231111,0.05129072,-31.09219742,-1.30487072,0.40799445,0.47436532,0.36050415,-1.20017719,0.74410349,-1.08316863,0.60599321,1.10763574,1.10883105,-0.65588188,-9.08232212,-0.19537713,0.15643154,
    0.03029764,0.00746743,-0.01807438,0.49906909,-0.28215712,-8.92515469,-9.50832939,-0.08603662,-3.98719764,-1.95517647,0.18441120,0.08743291,1.10533333,-13.79012775,-0.56083572,-0.07474464,0.74209058,1.87875676,-0.31360161,-0.28098878,
    -1.71723545,-1.63332450,-0.70277327,-1.72978818,-0.78654754,-0.78799188,-1.20159936,-2.19960213,-0.73025626,-1.08683157,-0.50234503,-0.53784931,-1.31405175,-1.01616895,-0.79000282,-2.16638327,-1.20045567,-1.24792087,-1.83340490,-1.45727849,
    -2.05961800,-1.40075958,-1.10364425,-1.52160728,-1.23169112,-0.65080297,-1.21007740,-1.73098361,-1.26428127,-0.99038160,-0.35182700,-0.63260615,-0.76613742,-1.06037295,-0.98576581,-1.88694417,-1.36628640,-1.15377665,-1.95869005,-1.67333865,
    0.85804075,-0.60390049,1.93193662,0.05546032,0.25500220,-0.78732151,1.39126110,0.69160128,-9.10383034,-0.26272479,0.67415911,0.23160648,-1.67159581,0.10088525,0.18864019,-1.01805735,-2.58889365,-4.20228148,0.34739298,0.49479443,
    -2.30386567,-1.27345240,-0.61347234,-1.85767472,-1.48698127,-0.66655886,-1.20955634,-1.99832249,-1.24096298,-1.04941225,-0.43386844,-0.67392403,-0.91585988,-1.12279451,-0.74183524,-2.10291576,-1.21844172,-1.30480552,-1.52929664,-1.26773608,
};
static float l3_bias_array[15] {
    0.58570009,-1.46783864,0.78820652,0.27847427,-0.04347286,-0.05443424,-0.15299970,0.02039781,-0.06198607,-0.23831370,-0.36696136,-1.44023418,-1.40434730,0.10727824,-1.46259904
};
static float l3_output_array[15];

static const quicknet::matrix_t l3_weights{15,20,l3_weights_array};
static const quicknet::vector_t l3_bias{15,l3_bias_array};
static quicknet::vector_t l3_output{15,l3_output_array};

/******** Network ********/
static quicknet::Layer layers[4] {
    {l0_weights, l0_bias, l0_output, quicknet::quick_sigmoid},
    {l1_weights, l1_bias, l1_output, quicknet::quick_sigmoid},
    {l2_weights, l2_bias, l2_output, quicknet::quick_sigmoid},
    {l3_weights, l3_bias, l3_output, quicknet::quick_softmax},
};

NeuralNetwork::NeuralNetwork() : network{4, layers} {
}

} /* namespace dsme */
