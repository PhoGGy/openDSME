/*
 * openDSME
 *
 * Implementation of the Deterministic & Synchronous Multi-channel Extension (DSME)
 * described in the IEEE 802.15.4-2015 standard
 *
 * Authors: Florian Kauer <florian.kauer@tuhh.de>
 *          Maximilian Koestler <maximilian.koestler@tuhh.de>
 *          Sandrina Backhauss <sandrina.backhauss@tuhh.de>
 *
 * Based on
 *          DSME Implementation for the INET Framework
 *          Tobias Luebkert <tobias.luebkert@tuhh.de>
 *
 * Copyright (c) 2015, Institute of Telematics, Hamburg University of Technology
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "./NeuralNetwork.h"

namespace dsme {

/******** Layer 0 ********/
static const float l0_weights_array[80] {
    5.21838331,-0.48260933,20.24709702,-2.41653204,
    -0.93471694,9.73155975,-2.84768724,1.36296606,
    9.97927570,7.13538074,20.66592598,-1.89724922,
    -3.57976079,-4.70049238,-2.25052667,-3.52705359,
    -0.68549019,8.74238396,-2.51107526,-3.09663558,
    11.69285488,8.38356209,16.98430824,-0.24245751,
    -10.70917225,-8.67532253,-12.53567028,0.77956229,
    9.13107300,4.71102095,22.33359528,-1.99509788,
    -7.98789883,-3.62318993,-19.88305092,2.19106126,
    7.77905226,2.89346290,22.64754105,-2.13049388,
    -3.49161363,2.74710584,-14.92474651,3.80960441,
    0.09829058,-6.14003706,1.01867270,-0.91000223,
    -6.43608904,2.11439514,-15.83076191,1.67634904,
    7.34668541,1.24074209,21.26725769,-2.05297661,
    -2.93474126,0.26531920,-3.13404059,-3.34249377,
    -3.68127656,-3.83416986,-2.79909205,-3.16788983,
    11.48835087,8.02101612,18.11740685,-1.21690106,
    -2.36592984,4.73600864,-4.28798866,3.26599073,
    2.25634933,-4.06135416,3.75494576,1.18974459,
    -7.70630550,-3.37924290,-20.77968788,1.84357440,
};
static float l0_bias_array[20] {
    0.28099310,-0.97726184,0.11181924,1.46174610,-0.50342929,-0.46899754,-0.10685436,0.10168332,-0.68742824,0.18972290,-0.26697403,1.17197263,-0.21080105,0.09426545,1.47057331,1.29153180,-0.17313296,0.44513971,-2.19826603,-0.58116966
};
static float l0_output_array[20];

static const quicknet::matrix_t l0_weights{20,4,l0_weights_array};
static const quicknet::vector_t l0_bias{20,l0_bias_array};
static quicknet::vector_t l0_output{20,l0_output_array};

/******** Layer 1 ********/
static const float l1_weights_array[400] {
    -1.70547211,1.63835335,-1.80729234,0.98122931,2.18332982,-1.34682322,1.29399836,-1.90637398,2.14049983,-2.07950854,2.46982479,-0.66667908,2.24302697,-1.81583619,1.42859209,1.29947817,-1.59148252,1.67475069,-2.86748147,1.97843444,
    1.73541486,-1.26991260,0.83311564,1.96571481,0.16555314,0.16012064,-0.63301927,1.21820509,-1.13115704,1.29658663,-0.93841267,1.30611038,-0.85917455,0.98530388,0.93365139,0.96199507,0.76192456,-0.96887571,-0.13091277,-1.31085062,
    0.75580859,-1.44480598,-0.69807190,6.02760887,-0.45810217,-1.46968210,0.64484656,-0.39388719,-0.51144457,-0.19551159,-0.94007963,2.90953183,-0.63332552,0.27232733,4.16804266,4.17618275,-0.98707289,-0.90247858,-0.74367583,-0.43810919,
    -1.82266867,1.57782197,-1.17873108,-0.28516918,0.08582528,-0.46567184,0.37939441,-1.84520745,1.46928668,-1.76129162,1.52568936,-0.90219003,1.24567497,-1.80823946,-0.04477616,-0.06965939,-0.87689030,1.47604239,-1.11366093,1.48707330,
    1.22662079,-0.89492530,1.63365555,1.42039037,0.79114217,0.81802559,-1.07073748,1.58275580,-1.12986135,1.47120118,-1.01031911,0.54230130,-1.04088628,1.31129277,1.13696003,0.64107752,0.93410712,-0.67347264,-0.07278996,-1.10435247,
    -0.95618117,1.19786680,-0.63908464,3.62446880,2.37335777,-1.24373913,0.02851644,-0.75585622,-0.61685514,-0.68006903,-0.35066763,1.82644796,0.34642106,-0.45483789,5.45906067,3.43238187,-1.00353777,1.02668214,-3.01988506,-0.28887370,
    1.40114462,-2.12272668,0.52072257,3.55545115,-3.34087420,-0.36236328,-0.46146730,0.87550312,-1.23593163,0.64646453,-1.75474513,3.59544420,-0.82316887,0.53136867,2.19738054,1.78771770,0.07461923,0.40341550,-0.49483877,-1.13998818,
    1.66232908,-0.61911851,2.00590491,1.29301572,0.85177189,0.67097622,-1.23542631,1.85506439,-1.45968747,1.30168903,-0.82061547,0.64173478,-0.95427275,1.09915519,0.46471053,0.25135201,1.14418924,-0.44895551,0.10109109,-1.29627275,
    -2.08324265,-0.30906013,-2.71944833,1.37127149,-0.14026815,-2.76211691,2.36981964,-2.64896894,2.32107782,-2.43800187,1.70527911,-0.15182602,1.62877178,-1.64131951,0.70557410,1.21968412,-2.26510429,0.40342444,-1.56616843,1.93579328,
    -0.36823553,4.07406902,-0.99817443,-0.83976179,3.57499266,-0.59497052,-0.02181336,-0.61643040,0.62703013,-0.27584854,0.06158551,-1.13524604,0.51670521,-0.57306677,0.10750060,-0.46749300,-0.48718542,3.52218223,-1.13996553,-0.29058370,
    -1.69053900,2.92513394,-0.37282377,-1.41324162,3.63556147,0.33540478,-1.03667629,-1.19818842,0.77909243,-1.21115351,1.29260206,-1.71349251,1.58405244,-1.51146138,0.44363207,-0.57426882,0.00846139,0.19987750,-1.75649083,0.27087870,
    1.12780261,-0.18008953,1.87682950,1.61345840,1.59556329,0.36274138,-1.15748453,1.25098991,-1.38391769,1.50350475,-0.90385753,0.97600603,-0.43344328,1.28499031,1.35169876,0.62284082,1.31806505,-0.24314477,-0.58238471,-0.86563003,
    0.49830237,-4.88188219,0.84693950,1.13286650,-4.04068136,0.71649122,0.02149410,0.76850355,-0.70936161,0.59525734,-1.24807906,2.09168553,-0.67013115,0.63435984,0.62342203,0.61395419,0.82649040,-2.35434389,0.14163388,-0.38341224,
    0.94371736,1.04093802,2.51159573,-1.49691308,0.43866321,2.76215005,-2.48844099,2.00662065,-1.74440908,1.68272722,-1.05517077,-0.36082551,-0.93967879,1.74077439,-0.98836839,-1.84598124,2.68054914,-0.25478446,0.52116770,-1.63849151,
    0.67639470,-3.15416145,1.05345166,2.27104950,-1.57248461,0.77464443,-0.61355770,1.14319623,-2.78038144,1.10024452,-4.73860407,-0.60861552,-1.74275172,0.92886382,-2.23779750,1.90280247,0.96581089,-4.75902414,6.76786566,-1.25761199,
    -0.48838720,3.13750529,0.57138753,-5.05879688,4.76314735,0.48679158,-2.09464931,0.20653155,-0.46390510,-0.27241296,0.33079287,-2.37503123,-0.45906660,-0.04004041,-2.00179863,-4.02176332,1.07141864,0.62872523,-3.27714109,-0.23303552,
    -2.41902018,0.66736633,-1.65798485,-2.66891789,-1.25296915,-0.75573742,0.57430196,-1.57964265,1.46502674,-2.30813074,1.13659954,-1.47799790,0.36222661,-1.82679021,-2.44490194,-1.58350396,-1.00047433,0.27478343,0.12013201,1.18547535,
    -2.11777711,2.13487458,-0.89928365,-1.30273461,2.36372876,0.43179902,-0.31122640,-0.77182686,1.12161410,-1.50185323,2.19543314,-0.93063539,1.56393540,-1.64151561,0.79183894,-0.27264813,-0.10499246,1.03662419,-2.21433115,0.92539483,
    -1.78861284,0.94247407,-1.71742487,-0.88651747,-1.29480660,-0.93740892,1.72758079,-1.51301277,1.99916327,-1.40335822,1.62823999,-0.30009428,1.26895881,-1.40796411,-0.78888071,-0.32784551,-1.01415277,1.08635783,0.03156624,1.76128304,
    -0.35845974,3.10630202,-0.56817818,8.75448418,2.95122266,-1.10935092,0.81416547,-0.66081047,-0.28804153,-0.34508771,5.07875967,0.85707420,1.55302346,-0.13922001,6.96951342,9.82283020,-0.25596109,8.43590164,-3.23887968,-0.02280244,
};
static float l1_bias_array[20] {
    0.27133381,-0.26985925,-0.19218463,0.09779104,-0.14775366,-0.30673876,-0.29902405,-0.20819093,-0.48576069,0.15461774,-0.13757980,-0.06979039,-0.03863620,0.30138597,0.06972112,-0.18505518,-0.07710248,0.04214676,0.30873191,-0.10788383
};
static float l1_output_array[20];

static const quicknet::matrix_t l1_weights{20,20,l1_weights_array};
static const quicknet::vector_t l1_bias{20,l1_bias_array};
static quicknet::vector_t l1_output{20,l1_output_array};

/******** Layer 2 ********/
static const float l2_weights_array[400] {
    4.11118937,-1.11233556,2.08634853,5.65330839,-0.98495734,0.33431605,-0.28634149,-1.10998774,2.87948847,0.85311043,5.62916327,-0.45550570,-4.62651777,-3.28057313,-6.23814535,-4.37022972,3.09410143,4.81415844,4.92835903,-0.27907079,
    -14.11981678,0.16162619,-6.17420578,-8.72950935,0.68197370,-1.45080876,0.40453151,0.42955306,-2.25493836,1.52757776,-5.95151377,0.43178022,-5.19952297,1.11250746,-2.93848658,2.35877728,-2.40367508,-7.25541878,-7.42040634,-0.41812590,
    0.45556715,-0.37385687,-1.03920674,0.75296843,-0.11576251,0.03226702,-1.02266276,-0.20815191,-1.51644599,1.09328544,3.23780942,0.50812775,-2.71851993,1.09490407,-2.02746558,0.63600802,0.30991668,1.97409010,0.05174368,-0.55577898,
    -0.76275706,0.67871320,2.64135432,-0.62693202,1.41685295,0.46692184,2.45161057,1.03114939,-0.09555135,0.46894628,-1.31981325,0.84056342,-0.63505352,-1.92457128,-3.19861817,-2.15804982,0.34016344,-1.01813495,-0.75354898,0.56558925,
    -0.50348997,-0.79352355,0.19455492,0.73272657,-1.07420218,-0.68922758,-0.72587305,-0.89787495,0.00254430,-0.73911899,0.43781585,-0.75660616,3.09354734,1.03597546,12.41983795,-1.40480065,1.10129678,0.01641348,1.63710523,-0.72830647,
    -4.17921162,1.46860337,2.17111921,-1.93440938,1.20603287,0.05031005,1.40159798,0.96975237,4.46351337,-0.68815231,-1.39023316,0.53768200,2.46878910,-2.83991957,-1.06725609,-9.12119198,-3.84395194,-1.19249320,1.20896745,-1.41598260,
    -0.06789459,-0.00635929,1.99627948,-0.13622518,-0.34319612,-0.52773619,-0.22602460,-0.73171055,-2.79640603,-1.41549385,0.34271395,-0.41224733,2.34070277,0.69426036,1.97056603,-2.48165941,1.41490591,0.57818019,-0.12662815,-3.55023766,
    2.06533623,0.17501512,1.35836852,-0.55931807,-0.19083592,1.92669153,-1.94522476,0.13331757,4.06340551,4.15304518,7.18172550,0.24517182,-7.59540224,-0.54729414,-2.42722344,0.03294066,1.06804729,2.95278883,-0.48348767,0.95142275,
    -0.15995039,0.40842405,1.10877383,-0.71622384,0.28600115,0.41808692,0.43281454,0.59650069,3.73213840,-0.14492264,-2.44150352,-0.21531714,0.72325706,-5.73304844,0.90980703,-4.49673033,2.28956580,-2.25454116,0.08778089,0.22326691,
    0.73758394,-1.49683201,1.36814129,2.14376974,-1.30283833,-0.51994050,-0.90739626,-1.74138129,1.83434713,0.15361971,1.25533772,-0.98400086,-2.07001901,-1.55643845,0.48433569,-3.27932501,1.74818528,0.91990358,3.01220894,-0.29748043,
    -0.20613877,-0.43447343,-1.76964343,0.15078558,-0.72687203,-1.73538280,-2.32767010,-0.60426700,0.17973143,-1.67773831,0.65134621,-0.61276031,5.71765041,1.09404290,5.27043867,-0.02792279,1.79268467,0.18910569,0.27432427,-1.01757026,
    0.26805961,-0.76901364,-3.09165883,1.46065652,0.14845550,-2.18328619,-2.26085687,-0.00365166,-2.44971871,-1.09099150,0.24980532,-0.62576157,1.83165336,0.68599588,5.69031906,-0.68444735,0.33867446,0.60409391,1.29681456,-1.02735531,
    2.39127779,0.46553099,3.02157021,-0.12187880,-0.33730736,-0.24715641,0.78735197,-0.26742733,0.64959019,-0.89477199,-0.11249505,-0.28689492,1.87240267,-1.75396037,3.14131141,-8.93460274,-1.79539216,0.32407776,0.13688980,-1.51980186,
    0.49925157,-2.06789327,-1.92153347,1.03399777,-2.32426429,-0.32261795,-2.18010306,-2.52725434,0.58729386,0.05304149,0.95975447,-1.53768766,-2.85080576,-1.44108975,-1.63884282,0.65130508,1.35998774,0.57538491,0.93688041,-0.48284867,
    -1.95070612,-0.35330069,-0.70824134,-2.76661539,-0.41888538,1.37577355,-0.32249877,-0.24162199,-2.98508382,2.28548717,-0.88972193,-0.49987245,-4.09048796,0.60356700,-0.86804014,2.88803101,-1.30361485,-0.69975060,-2.65901256,2.41577911,
    5.03449440,-0.72455299,3.84423566,-0.38123751,-0.51133484,5.39920902,0.35868004,-0.42951182,6.04737568,3.55332232,6.25317192,-0.25290024,-8.79988289,-2.17011380,-6.97427130,1.93575406,-0.65601265,4.13727808,-0.11225108,0.37677273,
    0.36802596,0.59845901,6.57990599,-0.25068161,-0.11287739,0.62956005,1.38135028,-0.52754837,0.98847288,0.48619336,-0.08841018,-0.61461604,-0.65047711,-2.57543826,-0.81126958,-3.18393517,1.30752373,0.02771674,0.19934839,1.09885454,
    0.05244665,-0.54306817,1.95911932,-0.75703704,-0.02969716,-0.52380979,0.32645398,-0.18963379,-2.39711976,-1.95650411,0.55381900,-0.55443746,2.69589639,0.45538214,1.82028985,-7.90657091,-0.12132203,-0.53519928,-2.30946350,-3.05050802,
    0.65060771,-0.49856591,3.12072539,1.38382602,-1.40979517,-0.61099148,0.76054227,-1.64457774,1.10775733,-0.76153338,1.07632852,-1.66689467,-1.66509247,-4.02288961,-2.10237384,-4.89356327,0.99191010,0.55091876,2.11026001,-0.69043577,
    3.12629390,-0.31029561,3.76779747,2.04185867,-0.81640631,5.75993347,0.36067352,-0.52192783,0.87729752,4.16995955,3.24085259,0.00657210,-1.54749525,-1.60730135,-1.50726342,-1.03851640,-0.58005673,1.93861508,0.89585990,5.46863699,
};
static float l2_bias_array[20] {
    -0.41637418,-0.16873111,0.08324166,0.20344968,-0.25297487,0.58890980,0.00703168,0.27962002,0.07141907,-0.42110470,0.02220156,-0.35693714,-0.50921041,-0.55071366,-0.42380658,-0.26380718,-0.19932169,-0.36911041,-0.60615075,-0.34991899
};
static float l2_output_array[20];

static const quicknet::matrix_t l2_weights{20,20,l2_weights_array};
static const quicknet::vector_t l2_bias{20,l2_bias_array};
static quicknet::vector_t l2_output{20,l2_output_array};

/******** Layer 3 ********/
static const float l3_weights_array[300] {
    -0.62367773,-33.69272232,-0.52529407,-0.79018307,-2.02889681,1.03021884,0.49045140,-0.25875655,1.65399623,0.28611934,-3.15141058,-2.50181961,0.44661778,1.22225618,-0.02025994,0.25430945,0.55024636,2.74515414,-2.01223183,-0.11032481,
    -1.40890694,-2.54134917,-2.18107343,-2.71131039,-1.91100550,-0.66554081,-1.41772127,-1.62608576,-0.98196882,-1.64751613,-2.54306865,-1.63176548,-1.42404068,-0.25442484,-1.63984203,-2.20242333,-0.76643831,-1.19877887,-0.58445662,-1.98920143,
    1.33994675,2.84963965,-0.19215265,0.17035192,-3.73152971,1.60115242,-1.49293911,1.08486462,3.28615546,-0.93710601,-1.85597360,-6.09775782,-1.83602905,2.80104947,-0.78925031,0.92598295,-1.54153919,0.41765830,-7.43671083,-0.02942133,
    0.00488035,4.13525248,0.53959876,-0.04699726,-6.22121143,2.57993245,0.71516138,0.39716494,0.68624884,-2.12394691,-4.35031891,-1.59255159,-1.80553353,-2.21217179,0.10616149,0.83729887,0.06017383,1.73301780,2.44958162,0.67316163,
    -2.27959967,-0.28027365,0.75322288,1.37499630,0.41498387,-1.25934124,2.40045381,1.20945942,-1.13133359,0.21596463,-4.30458641,-2.30525708,1.43531275,-0.54442048,-0.67991120,1.49853480,-1.05827379,5.64698553,-0.30904603,0.26387027,
    2.41572666,2.54815125,-0.16389832,0.49341506,1.06855905,0.04642175,1.22040629,-0.35463220,-3.78728676,-0.02070964,-2.58190203,-1.24921918,1.41806746,-1.85165048,0.48320532,-1.59543777,0.86983865,3.07708216,0.12171089,0.75568616,
    -0.65845412,0.24962549,1.02065408,0.26462099,0.32248655,-3.32338643,1.62164366,-0.61438292,-26.79513168,0.04226664,0.08975337,0.50323600,-1.19813037,-1.61755562,-0.04595445,-1.03407288,1.18421936,1.91726923,-0.08989122,0.56543899,
    0.10208647,-1.80981612,-0.32354107,-0.66300541,-0.08639090,-0.14900827,-5.49155664,0.49558544,-1.58831286,0.33777675,1.52712750,1.09485281,0.64539194,-0.07839908,0.56658679,0.47663745,0.55777097,-9.77284145,0.54095191,0.74122882,
    -1.26774085,-1.66898251,0.34899652,1.05068624,0.77787793,-4.71188545,-1.18262053,-0.72656900,4.80119324,-2.05782461,-0.24405655,0.25196809,1.00073469,0.68941838,0.09601928,-2.79140186,-1.17663682,-1.64942193,2.86642480,0.01248318,
    -0.06646394,0.31097248,-0.21234713,-0.79660839,0.95539224,-5.90420008,2.38049984,-1.94990742,-4.04875278,1.50080109,1.98759627,0.64566213,-0.67693412,1.60712934,-0.24299864,-0.43245202,2.16075230,-6.81560278,0.94509059,-1.59420466,
    -1.03221142,-3.37662864,0.29508957,1.04487264,2.18314314,-10.99858379,0.06506494,1.06916308,3.39632964,0.81640875,1.34346271,-0.14322887,-3.41633773,0.72197348,-3.11945462,1.01602650,-2.34990978,-4.64311361,0.08966305,-2.17060399,
    -10.38559628,-15.50582123,0.21397112,0.15484032,-1.63744402,-4.31488419,-1.66876435,1.52942276,-4.69452667,-3.36305785,0.69622409,0.56458294,-2.84770608,-0.67149496,-0.90987593,2.04256296,-13.34846306,-5.50162172,-0.00799816,-0.81668156,
    -1.36463308,2.49980640,1.26930606,-0.13887064,0.37416819,-6.87721825,-6.87322617,-16.50918770,-2.73683214,-1.32079053,1.49648404,0.91494435,-6.44189978,-0.93693459,2.20388269,-30.29170036,-2.92998695,-5.66518021,-2.89207363,-4.50477409,
    0.90265632,-5.27508020,-0.79668796,-0.73294282,-0.30265015,0.27528748,-1.63416147,0.28705871,3.62191057,0.36277181,1.76446390,1.59862232,0.82990015,1.34478760,-0.59411293,0.00845018,0.22076228,-2.86915207,0.06372919,0.06145328,
    -1.92504275,-2.32120180,-2.42427707,-2.42664027,-2.42339921,-1.12851977,-1.05674100,-1.38467908,-0.94860327,-1.38418055,-2.40518761,-1.63616586,-1.10430598,-0.36763784,-1.27703178,-1.62846708,-1.09388602,-1.48843575,-0.54800165,-2.19968295,
};
static float l3_bias_array[15] {
    -0.64647186,-2.66725087,-0.24975865,-0.09024111,0.25619185,-0.19301209,0.13435256,-0.10467751,0.73060703,0.02132112,0.72463948,1.18693340,0.40815207,-0.06443678,-2.55895615
};
static float l3_output_array[15];

static const quicknet::matrix_t l3_weights{15,20,l3_weights_array};
static const quicknet::vector_t l3_bias{15,l3_bias_array};
static quicknet::vector_t l3_output{15,l3_output_array};

/******** Network ********/
static quicknet::Layer layers[4] {
    {l0_weights, l0_bias, l0_output, quicknet::quick_sigmoid},
    {l1_weights, l1_bias, l1_output, quicknet::quick_sigmoid},
    {l2_weights, l2_bias, l2_output, quicknet::quick_sigmoid},
    {l3_weights, l3_bias, l3_output, quicknet::quick_softmax},
};

NeuralNetwork::NeuralNetwork() : network{4, layers} {
}

} /* namespace dsme */
