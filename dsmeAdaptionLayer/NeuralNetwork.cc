/*
 * openDSME
 *
 * Implementation of the Deterministic & Synchronous Multi-channel Extension (DSME)
 * described in the IEEE 802.15.4-2015 standard
 *
 * Authors: Florian Kauer <florian.kauer@tuhh.de>
 *          Maximilian Koestler <maximilian.koestler@tuhh.de>
 *          Sandrina Backhauss <sandrina.backhauss@tuhh.de>
 *
 * Based on
 *          DSME Implementation for the INET Framework
 *          Tobias Luebkert <tobias.luebkert@tuhh.de>
 *
 * Copyright (c) 2015, Institute of Telematics, Hamburg University of Technology
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "./NeuralNetwork.h"

namespace dsme {

/******** Layer 0 ********/
static const float l0_weights_array[80] {
    -5.96901083,-6.10141373,-1.53346419,0.70484215,
    -4.53364754,-5.73134089,-0.70556593,0.02351480,
    -1.67586243,2.04812741,-2.69906402,-2.46796727,
    -4.03543568,-1.48177683,-5.81589127,1.52027380,
    4.14912224,1.82290506,6.17286539,-1.67012298,
    -1.74362767,2.81680918,-2.42870831,2.71023107,
    5.61995554,3.56911922,9.51790237,-1.59445512,
    -3.60978818,0.75664634,-4.77742434,1.57072461,
    -3.70799303,-4.89817190,-0.54645771,0.69922292,
    5.19243097,1.14661324,7.32585287,-1.52861714,
    2.99726939,-1.37308931,4.56315613,-1.37889206,
    -2.68817997,1.79453826,-3.88191724,0.79821736,
    -1.83168769,-6.21123123,0.37760666,-0.23611799,
    -1.89775169,2.47436857,-3.08517647,-2.41481805,
    2.87701750,3.84824300,1.24424708,-1.14697218,
    -2.04829335,2.67273736,-2.61222291,2.91336036,
    -2.83634925,-3.49533701,-2.09104204,2.08908319,
    0.02126911,4.38816357,-1.05995965,3.43415761,
    4.45791864,2.26699948,7.68568850,-1.58328199,
    -3.05635500,-1.26619363,-3.94277978,1.31389558,
};
static float l0_bias_array[20] {
    -0.12466248,0.24822594,0.99357074,-0.46412745,0.65859520,-0.18690716,0.33728045,-0.49586812,-0.05208011,0.33760679,0.40579975,0.26362360,0.97602838,0.98300916,0.39791927,0.09645765,-0.87109882,-1.92206573,0.56030947,-0.37675232
};
static float l0_output_array[20];

static const quicknet::matrix_t l0_weights{20,4,l0_weights_array};
static const quicknet::vector_t l0_bias{20,l0_bias_array};
static quicknet::vector_t l0_output{20,l0_output_array};

/******** Layer 1 ********/
static const float l1_weights_array[400] {
    -0.99726462,-2.02394891,-2.31497025,-0.10094583,-0.51025885,1.72720516,-0.47778848,0.67251861,-0.88778025,-0.91593999,-0.42915925,-0.32230678,-2.10087466,-2.04680276,0.47152546,1.11450732,0.61336112,3.75973010,-0.16007440,-0.15146425,
    -1.90622151,-1.84139240,-2.04066896,-0.35885569,0.58953995,0.66110665,1.81394660,0.03212712,-1.41959429,0.74674827,0.45423847,-0.37056756,-2.39576197,-1.68969500,0.89785421,0.61220175,-0.09476273,2.36144948,1.05510426,-0.43370387,
    1.47902119,1.16158974,-0.89887983,1.07783055,-1.86324191,0.29052773,-2.86383843,1.06273353,1.28238368,-1.81568718,-0.65324068,0.51494557,0.86687648,-0.39294428,-1.19796431,0.61514568,1.49059880,-0.28549242,-1.86023736,0.55613977,
    -1.54459131,-1.10096228,2.08261371,-0.40710604,-0.27396062,1.69397640,-1.01244771,0.02713671,-1.66733527,-0.86546254,-0.49311367,0.71198684,-2.53715515,2.22742653,0.23050824,1.58632696,-1.20203638,1.82715201,-0.69574153,-0.54759651,
    -0.28349334,-0.47127885,1.03234744,-0.07176596,-0.35359818,2.29566669,-0.96547216,-0.16247380,-0.63650614,-1.03416765,-0.35388777,0.86349756,-1.45508027,1.55815017,-0.13531263,2.22247481,-0.66622895,1.24469507,-0.34523720,-0.11501770,
    0.65958983,0.03765738,1.53553665,0.47115776,-0.54814380,2.87423277,-0.69151157,1.47425771,0.17643295,-1.05315804,-0.79272074,1.93750131,-1.10606503,1.98573136,-0.34458584,2.93698764,-0.67408901,0.79191697,-0.51170856,0.69162148,
    -0.23087910,0.43882963,1.66106379,-0.33297819,1.02002764,-0.06636121,1.76832843,-0.96865362,-0.29426599,1.29495788,0.98010737,-0.10632651,-0.02670280,1.19038653,0.40582687,0.06816253,-1.34540844,-0.67338902,1.09340250,-0.81741536,
    -2.00552726,-1.50809050,1.70539951,-0.21596058,-0.40052846,1.42026365,-0.87476617,0.45602855,-1.60901237,-0.94164217,-0.73253369,0.66154039,-3.32219934,1.66683662,0.57448155,1.93842959,-0.91674113,2.00102019,-0.52667791,-0.19576712,
    -2.36167693,-1.71562135,-1.07903409,-1.48609209,1.27871811,-0.57225347,2.60902810,-1.68518245,-0.98703569,2.41255164,1.59589636,-1.99718511,-1.37619984,-1.96320546,0.72198606,-0.71143824,-0.75684422,0.18161316,1.51799738,-0.85223204,
    1.49641001,1.15541542,-0.72983730,0.62736124,-1.43268454,0.07890303,-2.33159661,0.54536426,0.99296975,-1.63793898,-0.74141181,0.76116413,0.93253255,-0.62910682,-1.42444611,0.62340534,1.08751690,-0.04731898,-1.38170791,0.64711201,
    0.26153257,0.20196535,1.67954051,1.04442203,-0.81843573,1.34245682,-1.35725820,1.25163496,-0.34835228,-1.25071180,-0.75199860,2.29979038,-1.91437507,2.24433136,-0.21690573,1.86325002,0.21195042,1.09015870,-1.09552252,0.86795014,
    -1.04418552,-0.92992759,1.34956336,-0.58060074,-0.37000227,2.76369429,-1.12760174,-0.46454489,-1.00775623,-0.96618533,-0.52567756,0.12785220,-2.41962838,2.06662154,-0.32741037,2.70080543,-1.65612268,2.50066209,-0.20094712,-0.60422683,
    1.63890445,1.97413182,1.73104262,-0.60138917,0.25888932,-1.24113595,-0.26044726,-0.36195803,0.89659756,0.18885385,1.20633984,-0.40480933,3.26200032,1.17415154,-0.21948524,-0.59439385,-0.03331251,-2.94465590,0.36299509,-0.31534654,
    0.33762246,-0.03800464,-1.79481554,-0.20714438,0.98293787,-1.01781106,1.24719524,-0.97487515,0.37869084,1.26488841,0.58813369,-1.75385141,1.63968420,-2.03421831,0.05458555,-1.68985879,0.65941417,-0.05477808,0.39723366,-0.46289119,
    1.35495698,1.46505177,-0.18680964,0.36679396,-1.41068006,0.31342831,-2.37042785,0.09689719,0.62744564,-1.76690364,-0.54870021,0.13306135,1.41188800,-0.18788607,-1.23985469,0.84156418,1.16755080,-0.28690767,-1.78627968,0.42777005,
    -0.69905132,-0.60179919,-0.34698421,0.18864799,-0.53467500,0.95964718,-0.75014222,0.42955819,-0.49559772,-0.80147761,-0.27588561,0.30993634,-1.02068651,-0.65599269,0.31139588,1.41894579,0.61535108,3.19184828,-0.53240448,-0.03989214,
    1.53732824,1.93903947,-0.42785132,0.17185155,0.53620315,-1.49629557,0.01501672,-0.66481757,0.82865185,0.61168170,0.89962643,-0.24037513,2.49616861,-0.59856504,-0.51283586,-0.92052191,0.10612855,-1.61145878,0.19324756,-0.32391503,
    -0.27168605,-0.62705922,-0.65904880,1.38037503,-0.95132011,0.91499394,-1.49213147,1.13391829,0.41382194,-1.00867414,-0.46589205,0.28718066,-0.59252101,-1.22728491,-0.69368279,1.07224846,1.54197979,2.59279132,-1.14059162,1.15384328,
    1.08940589,0.67305553,-1.62939572,1.03446460,-2.10240531,0.75572485,-2.30756378,0.73616016,0.41249406,-1.99579537,-1.48105824,0.64051855,-0.02070656,-1.08643460,-0.98838747,0.11441036,1.46508014,1.11243093,-1.99533546,0.65307176,
    -0.43469366,-0.35658830,1.05051899,-0.64163572,1.56227207,-0.36397505,2.10438132,-0.48656800,-0.42773220,2.08493280,1.20244384,-0.46245149,-0.61579019,1.18789744,1.20551741,-0.18788753,-1.26692808,-0.15615566,1.61591911,-0.58511657,
};
static float l1_bias_array[20] {
    -0.36153543,0.25430748,-0.72145581,-0.30710176,-0.33115077,-0.31112346,0.23195446,-0.29161116,0.81646913,-0.60771269,-0.55808717,-0.38157248,0.18573451,0.51685166,-0.61988914,-0.13285221,0.21508153,-0.19106689,-0.65611821,0.45570880
};
static float l1_output_array[20];

static const quicknet::matrix_t l1_weights{20,20,l1_weights_array};
static const quicknet::vector_t l1_bias{20,l1_bias_array};
static quicknet::vector_t l1_output{20,l1_output_array};

/******** Layer 2 ********/
static const float l2_weights_array[400] {
    -0.42209700,-0.77353716,-0.15954460,-0.48994732,0.14811231,-0.12328628,-0.09569015,-1.04929984,1.02478790,0.20502336,-0.72594154,0.17271903,2.32825184,0.61559230,0.75871909,0.09713189,0.98428744,0.57086563,-0.73754799,-0.46746746,
    0.70473588,1.38110292,0.07125770,1.02655923,-0.40374047,-0.42751765,-0.14969379,1.52352929,-0.35138500,0.07217682,0.33072188,-0.01247697,-1.80470705,-1.02450204,-0.74958682,0.38833064,-1.50701141,0.34403536,0.20002179,-0.05480718,
    0.10353750,0.06805442,1.61602926,-0.57883710,-0.54259503,-1.14244890,-0.42028269,-0.72270489,1.04028010,1.62650013,-0.85122669,-0.68396044,0.11128320,2.13776207,1.41556406,0.62856203,0.48738936,0.76992166,1.77324128,-1.10534561,
    0.49463576,-1.00967789,1.08393586,0.12086251,0.25589854,-0.40463027,-0.52077281,-0.63620752,0.20265530,0.67362493,-0.87459069,0.88682443,0.88036436,0.92762327,1.13330483,1.25382257,-0.28776893,1.19866323,0.15778945,-0.77189147,
    -2.14983010,-1.00773668,0.82581621,2.47068906,1.71282160,3.02422380,-0.37334889,2.15332222,-0.97268063,0.84976953,3.39529729,2.26134038,0.61521518,-1.16673040,0.88265252,-1.74047303,-0.36442196,-1.11668825,0.29714939,-0.33289364,
    -4.78774834,-1.30316234,2.65690494,-3.53157616,-0.27730298,0.02718240,0.77800721,-4.31724644,-0.79851782,2.07851124,0.44580740,-1.79899645,1.67944443,0.23520748,2.30767250,-2.17028642,1.63255000,-2.46937847,-1.06939805,1.00931513,
    -3.96700549,-1.22151160,1.41592824,1.78631604,1.26849151,1.22718227,-0.02662150,2.03510332,-2.20360422,1.28232682,4.44918299,1.65351939,1.09068537,-3.87885523,2.11870146,-1.17693937,-0.44258034,-0.52870089,1.45613098,-0.45632729,
    0.43672493,0.01638241,1.61670494,0.18196242,-0.66694993,-1.05403352,-0.68038666,-0.14836332,0.84390575,0.76455081,-0.61850774,-0.06167351,0.74594247,1.78278351,1.08601916,0.77943319,-0.08685520,1.71266890,1.19544339,-1.17812157,
    0.49161839,0.45948058,-1.17403913,-0.19280680,0.10523971,-0.14302459,1.08836949,-0.08990616,0.65580577,-0.53326273,-0.19747238,-0.14850269,1.18909001,0.63103110,-0.43684569,0.11099784,1.00858891,-0.31806421,-0.88979143,1.86753106,
    -0.56354439,-0.33336416,-2.17612720,1.11643672,0.71950805,0.90403605,0.17823865,0.86125833,-0.67083621,-1.83776426,0.45222545,1.27669597,0.60070699,-1.81202722,-1.29382563,-0.83438796,-0.36334625,-1.38839245,-2.54801130,0.91880864,
    0.09203526,-0.52481657,1.46899199,-0.10414246,-0.39960217,-0.45606622,-1.96552336,0.28008819,-1.20088458,1.18646741,-0.22098225,-0.41131017,-1.57078576,-0.72113293,0.85649264,0.38916484,-0.89241093,0.81979001,2.09652996,-2.59554172,
    0.38359571,0.84558713,-4.22359800,-1.95210373,-1.16725719,-1.11498821,0.43714529,-3.15089059,2.64252114,-3.56567740,-2.54400873,-1.32657933,0.87116045,3.50376630,-2.91805339,-0.62567127,0.38817564,-1.19861090,-2.26413536,0.74044394,
    -1.39365613,-0.44577679,0.69833636,2.31257439,0.95201999,1.31031859,-0.65590525,1.87766194,-0.29371727,0.28426400,-0.25138238,2.07175636,0.43496779,-0.68760687,-0.00890482,-0.92601734,-0.31386593,-0.07922788,0.56058323,-0.15084103,
    -1.57543242,-0.09164404,-1.71911085,-0.28394482,0.54042035,0.87189543,0.81393921,-0.02933419,-0.78386909,-1.21918285,0.97917128,0.03780356,0.66149157,-1.88080192,-0.71306759,-1.32448053,0.08796339,-1.52826142,-2.56146336,1.28475344,
    -0.85939717,-3.89145350,-0.38693479,-0.32556066,0.50729012,0.71049446,0.88246775,-0.79509026,-2.99012661,0.32930812,0.75527132,0.60154122,1.67195511,0.58205533,0.36703441,0.02418268,0.96548373,-0.03941562,-0.98839790,-0.08477654,
    -0.61785936,-4.40482521,2.73250198,0.97069013,1.34089565,0.56835371,-0.12621750,1.54944491,-6.45519257,2.59010911,1.63133836,0.74945778,1.52576029,-6.08599472,3.48994422,1.78898430,0.49194425,0.94941980,2.23381758,-0.58566499,
    -2.35317039,0.89364839,2.06152129,-2.00828290,-1.93485117,-2.02870536,0.29146162,-2.83767343,0.93300563,2.04622459,-1.16247332,-2.72563601,1.47301197,1.66464257,2.55468583,-0.44727424,1.08135581,0.65209317,1.20791149,0.60921258,
    -0.50892204,-0.94886220,1.26373327,-1.03624356,0.09346125,-0.03991179,-0.12892294,-1.19645405,2.17333770,1.37318158,-0.65722650,-0.04765560,1.50598657,2.66704440,1.13823593,0.18640542,0.80637956,0.42674392,0.17518054,-0.67267507,
    -3.52755284,-0.97028303,0.37020162,1.69579017,0.80469871,0.77176809,-0.10465289,2.67873931,-1.88185751,0.32172436,4.70104074,0.82324880,0.36779481,-2.96134090,1.03935802,-0.44384009,-1.16904330,-0.56103420,0.55325186,-0.87188566,
    1.56979692,1.40082908,-0.67301005,0.38996717,-0.24766977,-0.70814955,0.44885105,1.29391444,-0.80701816,-0.30764416,0.53866565,-0.77456105,-1.71447122,-0.21943380,-0.45416790,0.64081979,-0.99101764,-0.08864701,0.14884692,0.24143711,
};
static float l2_bias_array[20] {
    0.05008781,-0.32425469,0.00425619,-0.09409068,-0.36716175,0.21733168,-0.05332017,-0.01884633,0.45289215,-0.03260016,-0.56829870,0.30254334,-0.27175263,0.11777800,0.30947965,0.37936553,0.36463714,-0.00091212,-0.29818556,0.03425016
};
static float l2_output_array[20];

static const quicknet::matrix_t l2_weights{20,20,l2_weights_array};
static const quicknet::vector_t l2_bias{20,l2_bias_array};
static quicknet::vector_t l2_output{20,l2_output_array};

/******** Layer 3 ********/
static const float l3_weights_array[300] {
    -1.22320759,-1.24156427,-0.55351323,-1.35941350,-1.27874589,-1.02236438,-1.15888178,-0.97819245,-2.13380456,-1.55361557,-0.04216490,-1.83949041,-1.23760402,-1.35281944,-0.46298921,-1.29624414,-1.14192271,-1.18529177,-0.65603989,-1.49558520,
    -2.03598595,-0.69956416,-0.78906024,-1.32020879,-0.70404172,-0.62386030,-1.35091543,-0.88573515,-2.10030890,-1.12544298,-0.55008733,-1.88658571,-1.43727720,-1.43037021,-0.90706879,-0.67720068,-0.55597287,-1.09285867,-1.09596360,-1.57907045,
    -0.83507693,1.01998854,-1.14087212,-1.18594456,0.37737390,2.60038042,0.26644722,-1.52224374,-0.21037284,0.22866800,0.64597684,-8.76884174,-0.11307460,0.81065840,-1.09559453,1.52652538,0.10808448,-1.23713970,0.65912753,0.67967892,
    -0.27013078,1.05226147,-1.63394809,-1.15237963,0.56468314,1.81381738,0.48381552,-1.82564855,0.83235770,0.71502823,-3.10491347,-10.52799320,0.01298495,0.73376006,-0.92500621,-0.88154060,-0.79147768,-0.99311000,0.83235109,0.52893376,
    0.96563023,-0.66951472,-0.72688389,0.43617064,0.58591044,-0.26333058,1.09843493,0.10609802,0.49446240,0.56002122,0.05795187,-2.92826200,-0.04986400,0.67566514,-0.47867998,-1.89896035,-6.72485542,0.77710676,0.99537098,-0.67741036,
    0.69572020,-1.14945602,-0.56971371,0.84775543,0.64322662,-1.31699336,-0.57536888,-0.46272814,-0.37191886,0.57244211,0.22243412,1.91316772,0.56718308,0.02782280,1.58467233,0.94797045,-3.91240239,-0.03602296,-0.37126341,-0.32393107,
    0.04867530,-0.00331567,-0.50569099,0.68997407,1.54890501,-0.99682701,-1.87392879,0.09597075,0.72409207,0.48460880,0.70837533,-0.01828438,0.69684100,-1.42467284,0.83393306,-1.44511926,-0.98477107,0.29417965,-1.53190958,-0.50294495,
    0.62719482,0.21781720,0.54979193,-0.10211783,-0.12971769,-5.69384575,-0.20974530,0.32268065,-0.33786428,-0.17554212,0.27301034,0.54160172,0.23699017,-0.28684956,0.08548611,1.31463790,2.42376637,-0.46286768,0.46585885,-0.00766237,
    -0.10233799,-0.71571767,0.43851548,-0.50606126,-1.03747749,-1.60912776,-4.54801416,0.48381105,0.97228485,-0.88078403,-0.37188268,1.28033543,-1.34420002,-1.04690421,-0.90536511,-3.53456736,1.47882664,-0.08175283,-4.31304932,0.68219751,
    0.04483197,0.73533922,0.96856678,0.88024414,-0.92705911,1.23729503,-0.71425760,1.24892008,0.39184570,-1.53166473,-0.98535132,0.88457543,-0.26956218,-3.21366453,-0.45717916,-0.32545489,-0.45974404,0.66337454,-0.78285921,0.54722059,
    -0.44450542,0.23078793,-0.19670549,0.14448842,-1.96440136,0.60493606,1.80475891,0.54601419,0.23218866,-0.71816242,-3.43961763,0.49606609,-0.46550432,-0.85836333,-2.89027524,-0.69176847,1.19194674,0.27584612,0.29699141,0.14517564,
    -1.68543971,-1.12674630,-1.28091025,-1.32747471,-1.14825046,-0.83362073,-1.19289565,-1.20467246,-1.89801419,-1.77039373,-0.34998509,-1.30813968,-1.17108393,-1.64255154,-0.87449795,-0.84559268,-1.12192643,-1.25628483,-0.61802214,-0.91712308,
    -1.83028853,-0.55806255,-0.94551390,-1.32012427,-1.03589630,-0.50576091,-1.08107185,-0.70572609,-2.02459526,-1.20025420,-0.66643822,-1.20908844,-1.41811764,-1.89250183,-0.42284572,-0.77546895,-1.04770470,-1.33948612,-0.96525514,-1.73445356,
    -0.61433560,0.65850592,1.05300808,-0.18471161,-0.25416183,3.32382727,0.40221569,0.15069729,-2.04837537,-1.45537698,1.85168004,-1.66065836,0.25188458,-0.15029733,-0.25956306,0.90265799,1.51193583,-0.19669282,0.21706378,0.53341860,
    -1.47319794,-1.17992926,-1.30008137,-1.09949327,-1.03995669,-0.57794464,-1.17067838,-1.22935057,-2.48812938,-1.16612470,-0.26050210,-1.38300431,-0.83385319,-1.89171159,-0.67447674,-0.68443096,-0.69479352,-1.40608823,-0.99847418,-1.23765910,
};
static float l3_bias_array[15] {
    -1.04829705,-1.12866068,-0.12318141,0.02099946,0.18381552,0.04314979,-0.03705877,0.17113703,0.01710073,0.11020992,0.00417724,-1.06870544,-1.11306798,0.03450280,-1.04876351
};
static float l3_output_array[15];

static const quicknet::matrix_t l3_weights{15,20,l3_weights_array};
static const quicknet::vector_t l3_bias{15,l3_bias_array};
static quicknet::vector_t l3_output{15,l3_output_array};

/******** Network ********/
static quicknet::Layer layers[4] {
    {l0_weights, l0_bias, l0_output, quicknet::quick_sigmoid},
    {l1_weights, l1_bias, l1_output, quicknet::quick_sigmoid},
    {l2_weights, l2_bias, l2_output, quicknet::quick_sigmoid},
    {l3_weights, l3_bias, l3_output, quicknet::quick_softmax},
};

NeuralNetwork::NeuralNetwork() : network{4, layers} {
}

} /* namespace dsme */
