/*
 * openDSME
 *
 * Implementation of the Deterministic & Synchronous Multi-channel Extension (DSME)
 * described in the IEEE 802.15.4-2015 standard
 *
 * Authors: Florian Kauer <florian.kauer@tuhh.de>
 *          Maximilian Koestler <maximilian.koestler@tuhh.de>
 *          Sandrina Backhauss <sandrina.backhauss@tuhh.de>
 *
 * Based on
 *          DSME Implementation for the INET Framework
 *          Tobias Luebkert <tobias.luebkert@tuhh.de>
 *
 * Copyright (c) 2015, Institute of Telematics, Hamburg University of Technology
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "./NeuralNetwork.h"

namespace dsme {

/******** Layer 0 ********/
static const float l0_weights_array[60] {
    -6.16334486,-6.98323250,1.28107083,
    7.17620802,9.16476345,-1.61015463,
    -6.93872309,-6.43319702,1.62767625,
    6.70457029,8.54899216,-1.63598824,
    -6.55018377,-7.18754196,1.04457235,
    -3.53058457,2.96627259,0.37867785,
    -6.83081341,-7.29076529,1.43017232,
    -6.94497013,-6.04524517,0.97234321,
    -6.41164303,-5.87699699,1.41521466,
    6.61934710,8.62352657,-1.83639407,
    6.07974911,8.95455742,-1.92156088,
    -5.16313362,-2.68187046,1.46127331,
    -6.67667770,-6.39876032,1.43481815,
    6.19040155,9.34382343,-1.78313076,
    7.21203899,9.02143383,-1.46153319,
    -6.41473198,-8.85968685,1.90062368,
    -3.35045648,2.71985364,1.45699441,
    6.30114794,8.42472839,-1.46831226,
    7.21341705,8.81943893,-1.56129825,
    7.25642586,9.80469418,-1.69813180,
};
static float l0_bias_array[20] {
    0.11277439,-0.28593990,0.02318213,-0.29193136,0.07472210,-0.06868120,0.24259846,0.24937329,0.12182489,-0.29641977,-0.23814364,-0.25005215,0.20964451,-0.26357573,-0.31730711,0.24810420,-0.15691225,-0.35625947,-0.27060726,-0.30427876
};
static float l0_output_array[20];

static const quicknet::matrix_t l0_weights{20,3,l0_weights_array};
static const quicknet::vector_t l0_bias{20,l0_bias_array};
static quicknet::vector_t l0_output{20,l0_output_array};

/******** Layer 1 ********/
static const float l1_weights_array[400] {
    -1.04882979,1.56371105,-0.79972893,1.29072428,-0.41947845,-0.52458680,-0.49897557,-0.80092412,-1.01841235,1.30644643,0.74972403,-0.63430709,-1.00649834,1.17995512,1.60059237,-1.14162397,-0.40024859,1.13615739,1.31362808,1.67880714,
    -0.88713855,1.66948366,-0.80980760,1.69420421,-0.88914776,-0.32987538,-1.12499499,-0.92569876,-0.90275943,1.10135293,1.24636781,-0.66934067,-0.42338952,1.51880002,1.19276488,-1.12167287,-0.31144494,0.90420145,1.04052591,1.33967996,
    0.65109599,-1.28955734,0.66488296,-1.02888811,1.01405907,0.39831614,1.30720401,0.75128359,1.02114618,-1.23810971,-1.10849786,0.70026052,1.31168735,-1.13329446,-0.88119817,1.41647410,0.28855386,-0.97270423,-1.23373413,-1.00207746,
    1.35433471,-0.77514076,1.03044403,-0.53494453,1.07310152,0.37869346,1.35810959,1.25732934,1.30843425,-0.73285717,-0.78477740,1.21848166,1.19099844,-0.27594742,-0.67577469,1.82389188,0.05488774,-0.70966959,-0.61117613,-0.57573193,
    -0.93783522,1.06418729,-1.04933119,1.25478959,-0.46228465,-0.28512883,-0.93946344,-0.51137614,-0.51509136,0.96113503,0.83948886,-0.66125733,-0.99166358,1.11333334,1.59608734,-1.23662114,-0.55000067,1.50484514,1.55228090,1.48841619,
    0.80773735,-1.27992284,0.97839892,-0.98336780,0.84425038,0.42797384,1.06522393,1.18279254,1.20471215,-0.81162953,-1.14892054,0.39067525,0.74566448,-1.21116543,-0.80500805,1.67878556,0.33128965,-1.07031894,-0.78363943,-1.31702197,
    -0.51591438,1.29876995,-0.70283741,0.81853706,-0.85209376,-0.15058875,-1.07842100,-0.63576335,-0.69292092,0.93032175,1.34859598,-0.59187216,-0.80506742,0.84363633,1.55966985,-0.88070923,-0.59161019,0.90119100,0.89682055,1.57566130,
    0.79608828,-0.63171941,1.07905686,-0.01017432,1.14845443,2.40942359,1.48002934,0.78505826,0.82425827,-0.36604467,-0.30555698,0.04177181,0.59149909,-0.34176084,-0.40019721,2.46744490,2.32400680,-0.55764902,-0.07934040,-0.12294168,
    1.59341669,-0.34762290,1.23577237,-0.93830210,1.34432173,0.69119626,1.61982310,1.43999934,1.19712782,-0.49309361,-0.22724353,1.22594237,1.83884454,-0.61968797,-0.53911197,1.76250935,0.73823154,-0.42471790,-0.56146979,-0.86137557,
    -0.98311710,1.61941373,-1.07066059,1.65042758,-0.89812207,-0.34492007,-0.93072689,-0.67546129,-0.65379006,1.21964324,1.33538270,-0.66456640,-1.11918950,1.56421816,1.40015852,-1.23253441,-0.42285419,1.18147314,1.37077022,1.53560972,
    1.36356294,-1.09832931,0.73716390,-0.91790736,1.29381585,-0.13182482,0.89268553,0.84431994,0.94727379,-1.21172571,-0.76453298,0.46410748,1.46903300,-0.73995179,-0.90450013,1.80962050,0.36743733,-0.93041128,-1.09592497,-1.00206268,
    -0.98986429,0.10425143,-0.90220457,0.67319453,-0.83483517,-3.77089810,-1.59137917,-1.30390787,-0.50594431,0.54455799,0.46699885,0.14553979,-1.22986281,0.46312982,0.21378070,-2.74573636,-3.48998094,0.55939877,0.60248095,0.28282642,
    -0.48444650,1.41621661,-0.87851030,0.99997985,-0.69165051,-0.60244155,-0.78138721,-0.54048347,-0.50268328,1.31444252,1.05893600,-0.42419890,-0.83479363,0.70620596,1.19440818,-1.23387468,-0.20883442,1.16708934,1.01678884,1.05300212,
    0.38190109,-0.55639511,1.26801181,-0.51018745,1.32313764,3.56928682,1.82838011,1.01113045,0.60768735,-0.62161320,-0.41681969,-0.51015282,0.93811512,-0.26328284,-0.59744078,2.93380237,2.97861671,-0.52564907,-0.12376451,-0.06930600,
    0.81976289,-0.46160111,0.97401935,-0.61890644,1.83494675,3.59199095,2.45372200,1.03989482,0.39666602,-0.44971690,-0.42017385,-0.67613894,1.09789181,-0.34267586,-0.36203814,3.68469977,2.95332098,-0.15032358,0.02040703,-0.60615647,
    1.18856442,-0.97660828,1.19923139,-0.58777636,0.54431021,0.15710306,0.81761444,1.29348457,0.86648333,-1.07779300,-1.23014271,0.34172621,1.30102909,-0.93324578,-1.24685287,1.65822542,0.49123946,-0.81324750,-0.62108040,-1.47360718,
    -0.59905738,1.31021285,-0.82733130,1.31650591,-0.78485107,-0.09288631,-0.88445640,-0.57838333,-0.60933095,1.51787281,1.45094550,-0.60482687,-0.87375152,1.20258415,1.37441528,-1.37785029,-0.70110947,0.73826152,1.04012454,1.72281194,
    -1.08045363,1.68244076,-1.18910718,1.28243077,-1.00332677,0.05466234,-0.85593903,-1.16607523,-0.55395585,1.60930073,1.41172779,-0.35310519,-1.25780690,1.12800193,1.73997152,-1.33665776,-0.09834313,0.79396713,1.60197592,1.85912430,
    1.34367979,-0.98464590,0.85050815,-0.28232437,1.11051548,0.35020667,1.29076016,1.03257382,0.95679998,-0.94726056,-0.61950618,0.42792982,1.46070099,-1.01175416,-0.54653203,1.32091129,0.11115981,-0.73166114,-0.35074621,-0.60325551,
    0.89908463,-0.80077714,0.85324574,-1.20813215,0.81795216,0.54509485,1.36412776,1.45273674,0.98784781,-0.96693194,-1.20702016,0.51134288,1.31258035,-0.99790841,-0.74890655,1.11369455,0.05320521,-0.80458742,-1.06268191,-1.56908107,
};
static float l1_bias_array[20] {
    0.08708387,0.17009999,0.19308065,0.46207461,0.10597770,0.27530143,0.03548912,0.17966089,0.48957032,0.17973374,0.32127920,-0.10320093,-0.00423636,0.26759344,-0.01926214,0.15816955,-0.06503181,0.13026765,0.42123818,0.24232006
};
static float l1_output_array[20];

static const quicknet::matrix_t l1_weights{20,20,l1_weights_array};
static const quicknet::vector_t l1_bias{20,l1_bias_array};
static quicknet::vector_t l1_output{20,l1_output_array};

/******** Layer 2 ********/
static const float l2_weights_array[400] {
    0.43614578,-0.46692380,0.49454734,-0.02978863,-0.40676826,0.22804284,0.29817817,-0.38789314,-0.35277143,-0.28512612,-0.45052528,4.24962997,0.40393302,-1.90463984,-1.51979661,0.17281701,-0.38590661,-0.37020394,-0.14717257,-0.56552625,
    -0.23888278,-0.03430063,0.20484796,-0.64616805,0.22365174,0.42750803,0.33981082,0.54509425,-0.63223398,-0.63822418,0.17724335,-2.25514507,-0.02213653,3.02188158,2.49426556,0.15478195,0.05539073,-0.35786083,-0.48544109,0.17420799,
    -0.15999681,-0.33441305,-0.48648551,-0.19455446,-0.68226403,-0.71407592,-0.50212675,-0.44182339,-0.05927207,-0.27491155,-0.22372632,0.84972364,-0.30452639,-0.62573296,-0.69367164,-0.49736699,-0.55610257,-0.40404496,-0.28600836,-0.48881778,
    0.17698820,-0.27023512,-5.87787580,-5.70166159,0.26359221,-6.65490913,0.48348543,-0.62564540,-4.95242882,0.55194145,-6.71489429,-2.80366611,0.44727448,1.78598857,1.83083022,-6.67888737,-0.24032474,-0.04850215,-6.16751719,-6.69600773,
    -0.42750415,-0.05704108,-0.91392171,0.62761015,0.12794885,-0.56292546,-0.02885433,0.01639298,0.32305348,0.17378546,-0.07027534,1.21541011,-0.70123774,-0.85495609,-0.91842699,-0.91678649,-0.07106454,0.29973820,-0.13070555,-0.57491106,
    0.07864615,-0.13521825,-0.68978745,0.14022371,0.05509653,-0.95294529,-0.31465665,0.18408102,0.49050540,0.15060998,-0.42551622,1.82886255,-0.16907531,-0.81368226,-0.41830930,-0.47159055,-0.11872779,0.74720842,-0.11199833,-0.83446223,
    1.69949043,1.57958949,-3.24239182,-1.78111124,0.92302555,-3.53913641,1.53510046,-0.56231815,-1.52740717,2.16705918,-2.85944510,-0.13715312,1.36830473,-0.35905302,-0.47871378,-3.21757078,1.32681453,1.70099795,-2.11913323,-2.60793734,
    0.35300907,-0.05876542,-0.92639464,-1.89603257,0.31178385,-0.69477117,0.26344368,-2.40067983,-2.92597151,0.80627578,-0.72844958,4.53020191,0.28822571,-5.09021664,-4.49593830,-0.42237821,0.80822122,0.61230785,-1.83830309,-1.17173147,
    -2.13643551,-1.84037709,3.63570857,1.74226260,-0.86336428,3.01267576,-1.61373782,0.02075225,1.28349650,-2.24700236,3.00274491,0.28892225,-1.11811852,0.13474928,0.37124228,3.33882284,-1.50589287,-1.85198259,2.15714431,3.24487352,
    2.51720142,2.69421077,-1.49459863,-0.46564865,2.21293426,-0.79262418,2.06480837,0.14465500,-0.27729368,2.95902371,-0.96006632,0.86782646,1.94528532,-0.49334785,0.43448347,-1.17246461,2.01202011,3.14186335,-0.66834712,-1.12533152,
    -1.63729584,-1.62690532,1.44030797,0.71069568,-1.54890418,1.09816873,-1.64008605,-0.14205846,0.08179164,-2.45404339,1.24951756,-1.36515379,-1.10572839,0.27525696,-0.11912693,0.97783852,-1.41618907,-1.74141109,0.74475783,1.28597569,
    0.70355272,1.08509719,-5.08561325,-3.02307606,0.76417768,-5.10619736,0.96428496,-0.42773822,-2.52326536,1.57186747,-5.31135750,-0.89050740,0.55849063,0.10773807,0.14409645,-5.42873955,0.92853177,0.60971689,-4.48034668,-5.44019604,
    0.51519454,-0.02247906,0.40688130,0.63076127,-0.00394629,-0.10417152,-0.14736228,0.79131442,0.78840441,0.49320176,-0.08130921,1.10019243,0.48117962,-0.36840591,-0.35078496,0.47267896,-0.10975055,0.12247422,0.53872162,-0.10067124,
    -0.15131848,-0.57280421,-0.31571361,0.21888077,-0.11048947,-0.27736789,-0.59484059,-0.69377917,-0.02305866,0.15634029,-0.15114771,2.86807370,-0.33884695,-1.40302336,-0.86164773,-0.13277952,-0.31410706,0.10149913,-0.05593460,-0.76775038,
    3.26509976,2.79394603,-2.05068612,-0.60221279,2.33241653,-1.93454874,2.51784515,-0.18382315,-0.65554899,3.62035608,-1.48522413,0.78417444,2.45227337,-0.07417013,0.13578437,-1.26887858,2.83944464,3.79494667,-0.84513831,-1.54711127,
    -0.65282166,-0.03377504,0.18453206,-0.59960842,0.27224681,-0.01748109,-0.35059074,1.86549938,0.06614494,-0.77058649,-0.13592780,-3.29768896,-0.02298429,3.94538689,3.44466424,-0.12939258,-0.35713002,-0.28088093,-0.34892660,-0.20005351,
    -0.15874034,0.22845611,-2.94488955,-1.18519378,-0.44067702,-2.43844199,0.35580891,-0.20141079,-0.60305166,0.04869396,-2.27466536,-3.49911976,0.23199525,1.99472058,1.84049141,-2.27297258,0.36110628,0.09261321,-0.95996082,-2.83126116,
    0.04634947,-0.00579443,-3.59938359,-0.33073199,0.02756177,-3.51392317,0.27997121,0.41723260,-0.07316750,-0.04811110,-3.07379484,-3.19114614,0.23019814,1.57619250,1.46040022,-2.98779678,0.21542870,-0.21666607,-1.43625867,-3.43476534,
    -2.18692899,-1.56565666,0.53652436,0.58657932,-1.70202458,0.54317153,-1.95106518,-0.25350180,0.10207307,-2.38533521,0.29930660,0.87374234,-1.61625087,0.23401371,-0.28196561,0.83933783,-2.08415079,-1.79578149,0.52346331,0.94400609,
    -2.09875941,-1.83451509,2.25960946,1.02840817,-1.02617562,1.88101614,-1.43652105,-0.14241113,0.85047787,-3.04529762,1.43291938,-2.23082399,-1.35657036,0.37944993,-0.15319893,2.06542993,-1.40595841,-2.75386739,1.21564281,1.88356268,
};
static float l2_bias_array[20] {
    0.02273980,0.28488913,-0.57249546,-0.15327325,-0.38353431,-0.30172426,-0.18356386,0.10673828,-0.00807694,0.17508228,-0.06307288,0.03662903,0.19604312,-0.27154160,-0.00640727,0.09505429,-0.26147234,-0.24506196,0.05458875,-0.05292061
};
static float l2_output_array[20];

static const quicknet::matrix_t l2_weights{20,20,l2_weights_array};
static const quicknet::vector_t l2_bias{20,l2_bias_array};
static quicknet::vector_t l2_output{20,l2_output_array};

/******** Layer 3 ********/
static const float l3_weights_array[300] {
    0.15777731,0.49274561,-0.08832873,-0.26578248,-0.56318116,0.21143104,-15.41575050,-3.18202996,0.82390249,-1.97674310,0.34004098,-5.64431477,0.57438934,-0.03259017,-2.05176902,0.27726799,-3.20491052,-2.62995100,-0.72657526,-1.04750609,
    -0.74962163,-2.76469731,-1.72476602,-0.60035020,-0.86051506,-1.54199028,-0.66708326,-0.80491400,-1.61361337,-2.18489218,-1.40483546,-0.69131303,-1.61972022,-1.83014655,-2.12071800,-2.02534795,-0.92305720,-0.92643529,-1.44162405,-0.91393232,
    2.58472943,-0.46152574,0.53632784,-1.39667833,0.66110182,0.93704569,-0.78359926,4.09920502,0.87508905,-0.20725827,0.22109926,-0.24018021,0.68754792,0.95879865,-0.39557829,-0.87205505,-1.90399003,-1.63065827,1.36343312,-2.08180022,
    -0.69116342,-0.44308200,-0.00286070,0.37365171,-0.07604112,-0.04769290,1.01861823,-2.64497066,-0.78904474,-0.01903080,-0.21139321,1.23537695,0.11226510,0.03895150,0.87360972,-0.00206773,0.76952332,0.22224694,-0.10706969,2.02071977,
    -1.06144154,0.54100931,-0.00865266,1.91861272,-0.61923772,-0.44875976,0.26831758,-4.52195215,-0.15455149,0.11002208,0.55381465,0.14076985,-0.22009805,-0.53248817,-0.14465253,0.73655057,0.91290748,0.54861975,-0.72098190,0.21012679,
    1.24805927,-1.12896430,0.41541475,-0.85834318,0.63877815,0.21016620,0.57410914,2.06313658,-1.10824299,0.35918197,1.63676989,0.27016982,0.84977990,0.58298361,0.27661458,-0.93779480,-0.83461469,-0.59092379,0.41660514,0.03780224,
    -0.39916202,-0.08430167,-0.07668078,0.50894946,0.03043485,0.13767441,-0.30675319,-1.20945048,1.15286827,0.12055147,-0.49016824,0.68784982,-0.06031426,-0.17697422,-0.02325513,0.22152118,0.71687502,0.58562440,1.69077277,-2.49025416,
    0.07743599,0.06636766,0.07163160,-0.64390838,0.38472843,0.33452937,0.71338159,1.07187426,-0.69676948,0.31305256,0.99641293,-1.25930965,-0.03632715,-0.02881183,0.10256799,0.08043588,-0.76808357,-0.27504253,-0.51988780,0.04605128,
    0.57790273,0.15259074,-0.01535570,-3.90775394,-0.59114182,-0.47080687,-0.99257982,2.07131100,0.19728491,-0.04163211,-0.38123259,1.45372880,-0.48312873,0.33798191,0.59253788,-0.27369434,0.50878984,0.95772117,0.10123006,0.66239274,
    -2.54461455,-0.03257766,-0.26625702,2.12022996,-0.09383254,-0.04183488,-0.90263551,-3.59853268,-0.45993337,0.04972974,-0.30462894,-0.42073873,-0.52801657,-1.41250563,0.62864447,0.06073685,1.06674445,0.46977729,-4.10631323,-1.08166099,
    0.00045701,0.26436260,0.04173208,-0.83832014,0.01540838,0.09218758,0.54712570,-0.33031940,0.15465467,-0.14236574,0.01571873,-1.28433478,0.24894452,-0.02400907,-0.16610879,0.18269752,0.12048096,0.15780880,-0.03880285,0.34114021,
    -1.72050309,-0.35555273,-0.51399201,-6.01264906,0.17857757,0.25436983,1.39131737,-13.14489555,-2.38269544,0.22086109,-8.30856800,-4.55695677,-0.52507490,-0.32606497,-0.16780388,-0.16058181,-0.74812430,-0.24764839,-1.40179849,-22.07047272,
    -1.36185622,0.24392585,-0.45057634,-4.07244015,0.17333457,-0.11208082,0.90750694,-7.38018131,-6.06840372,0.40536013,-10.20144844,-17.62219238,-0.54009616,-0.70134670,0.19271371,-0.36858425,-4.24189997,-3.53013706,-1.57880914,-26.36666298,
    0.27121279,0.14623299,0.16444305,0.66291714,-0.23536757,0.08880723,-1.46793425,1.07906806,0.28752735,-0.82306111,-0.61068887,0.06890146,0.26228938,-0.02153794,-0.17822847,0.35247272,-0.68713671,-0.69321984,0.72433645,0.82208526,
    -1.45274448,-2.18994904,-1.92476773,-0.37926388,-1.24057841,-1.08991158,-0.69307363,-0.34472200,-1.66664374,-2.07890892,-1.16335809,-0.96759772,-2.29621363,-1.74992406,-2.05182767,-1.99642909,-0.80738527,-0.46269542,-1.28973651,-1.13388312,
};
static float l3_bias_array[15] {
    0.24043673,-1.71113861,0.75398648,-0.19682306,-0.14633520,0.45809516,0.07851518,0.06953453,-0.24023825,-0.39672399,-0.08744113,-0.51607913,-0.26356947,0.21445911,-1.77693522
};
static float l3_output_array[15];

static const quicknet::matrix_t l3_weights{15,20,l3_weights_array};
static const quicknet::vector_t l3_bias{15,l3_bias_array};
static quicknet::vector_t l3_output{15,l3_output_array};

/******** Network ********/
static quicknet::Layer layers[4] {
    {l0_weights, l0_bias, l0_output, quicknet::quick_sigmoid},
    {l1_weights, l1_bias, l1_output, quicknet::quick_sigmoid},
    {l2_weights, l2_bias, l2_output, quicknet::quick_sigmoid},
    {l3_weights, l3_bias, l3_output, quicknet::quick_softmax},
};

NeuralNetwork::NeuralNetwork() : network{4, layers} {
}

} /* namespace dsme */
