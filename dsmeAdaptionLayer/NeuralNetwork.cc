/*
 * openDSME
 *
 * Implementation of the Deterministic & Synchronous Multi-channel Extension (DSME)
 * described in the IEEE 802.15.4-2015 standard
 *
 * Authors: Florian Kauer <florian.kauer@tuhh.de>
 *          Maximilian Koestler <maximilian.koestler@tuhh.de>
 *          Sandrina Backhauss <sandrina.backhauss@tuhh.de>
 *
 * Based on
 *          DSME Implementation for the INET Framework
 *          Tobias Luebkert <tobias.luebkert@tuhh.de>
 *
 * Copyright (c) 2015, Institute of Telematics, Hamburg University of Technology
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "./NeuralNetwork.h"

namespace dsme {

/******** Layer 0 ********/
static const float l0_weights_array[180] {
    -4.05402994,8.76085567,-4.89674187,-4.64539337,-0.40460697,2.45075297,-0.85038316,0.80518627,0.19904169,
    -8.93743610,3.91289401,0.83331841,-3.53184104,2.19956136,2.40814734,0.81942797,-2.25814533,-3.16867161,
    2.98658562,-2.14115167,-5.18735981,1.85443306,0.11482553,-5.42318010,8.01942444,-3.26172280,3.88886094,
    0.63569468,1.24670255,-1.12914538,-0.46424875,1.31758976,0.28605619,-1.20822036,-0.28878745,0.02207945,
    2.50451517,-12.13428116,15.99901485,0.41636762,25.46440315,-28.58134270,9.43384171,20.31665802,17.02526093,
    0.21254946,0.40290961,0.86542535,-0.31929123,3.77995706,0.51099032,-2.94417953,-2.15219641,-1.79474902,
    -9.81267738,-5.11126852,6.71201611,1.88655686,-4.04042292,12.26134300,-0.96766150,-9.84576035,-3.55245829,
    -1.12909472,-1.10557270,-0.20552890,-0.08805899,1.15033579,1.76393104,-0.65937668,-0.87535697,-0.47140107,
    4.50073624,-4.95862627,-2.29862309,-1.85246956,-3.65435958,0.78254426,-0.92703795,5.38377428,1.07233608,
    -5.86304712,-0.88785797,-4.97891855,-4.17060614,10.90813446,1.02487302,1.44133019,0.23017740,1.55198705,
    -4.47418880,9.72325993,2.30862904,-8.45868683,9.21242332,8.53823662,-3.09082079,1.02545714,-6.70593929,
    -4.77791691,1.44098163,-0.65129852,-0.46794912,-7.92962408,1.43655050,1.49523699,3.31989598,1.34380507,
    0.41110393,1.36257756,-0.61309272,1.81607592,0.70345241,-1.56900084,0.60659719,-0.66123015,-0.56464446,
    5.35025120,-1.50670302,0.68428326,-4.60334396,0.23876670,-4.77328587,3.69144273,-0.79442126,2.98245692,
    -5.36493874,-3.12986088,-1.77194726,-2.82960033,7.69910383,-1.20110154,0.92646384,-7.13082933,6.74968195,
    0.41872326,1.43504119,8.92564487,0.14716037,-10.02847767,0.72267419,-0.07974284,0.49944475,0.83850026,
    3.04661489,0.25606188,-1.32026279,-1.60191083,7.12293434,0.45351022,-4.60353899,4.41495752,-7.13998604,
    -4.18076801,0.52691758,5.50800419,0.90278000,0.85833794,-0.07006032,-0.10656518,-6.67361927,-1.11459589,
    -0.92488319,-0.26273522,2.59587455,-0.84381908,8.17231941,2.37794113,-6.01274109,-4.61178541,-3.33240461,
    -8.30428886,13.46111298,8.37480354,4.54414701,2.37210202,-3.38488126,2.73968887,-12.05534744,2.50000381,
};
static float l0_bias_array[20] {
    1.04417980,-10.47236061,7.08850098,-3.46865940,-1.88038290,-2.91549468,0.36455968,0.45194435,-0.23049265,-1.40091419,-18.21323395,16.97296524,-14.51919174,13.04774666,-0.07317425,-14.27959728,-26.36314392,-0.28172410,-1.91038871,-13.85820484
};
static float l0_output_array[20];

static const quicknet::matrix_t l0_weights{20,9,l0_weights_array};
static const quicknet::vector_t l0_bias{20,l0_bias_array};
static quicknet::vector_t l0_output{20,l0_output_array};

/******** Layer 1 ********/
static const float l1_weights_array[400] {
    -1.04825830,-2.33551741,0.63407946,0.91256797,-0.63504237,0.33804601,0.60211074,-1.40433109,-2.33606672,1.57790101,-0.71877921,0.63090676,-0.96309578,-0.97140735,-3.49066734,0.40320331,1.10584581,-0.34173840,0.33870485,-1.81220496,
    1.23057699,0.48905331,-0.19262348,-1.26475906,-0.26376989,4.68493938,-0.87632346,-0.04705440,3.07769799,1.31155980,-1.60517168,-0.25193399,0.82051164,-0.27398214,0.84771991,-0.65668327,-1.71452510,1.32867026,-3.11600518,1.72056484,
    0.02787661,-0.88288236,0.13484292,1.02162313,0.96785033,1.06301200,-4.82581711,5.90990496,-0.84843737,-2.09177518,0.06165402,-0.19641435,-1.18010080,-2.66086578,1.32280231,1.33455873,-0.91205180,-0.35122335,-2.66557813,-1.00097799,
    -0.00525154,0.01593671,0.00242611,0.00176680,-0.01582852,-0.00512233,0.00688883,0.00238052,0.01607348,0.00313395,0.00277142,-0.01023895,-0.00864095,-0.00717029,-0.02050838,0.01011408,-0.00679779,0.00076758,0.00543862,0.00379693,
    -0.42128158,2.29156351,2.08126903,0.46095011,0.23614617,-0.21764369,1.72947717,-0.96942091,-3.25641441,0.27924508,1.45740223,0.05163652,0.17810753,0.29816252,-2.51474595,1.65018237,-1.50623822,0.61743975,0.48190144,-3.77395010,
    0.00589811,0.04403352,0.00017213,0.00548302,0.02458673,-0.00280614,-0.01604956,0.01971023,-0.01060865,0.00904018,0.00871232,0.00211883,0.01177905,0.01050900,-0.01647974,0.00639790,-0.00397606,-0.00370417,0.02613923,-0.00433075,
    -0.00527673,0.04827664,-0.00661981,-0.00460048,0.00489247,0.01469900,0.02186143,-0.00838338,0.01109719,0.00357786,-0.00619496,-0.01091155,0.00683961,-0.01154177,-0.00278390,-0.01491163,-0.02678251,0.00208933,0.02329728,0.00879530,
    0.00492242,0.01451647,-0.01458467,0.00280608,-0.01001070,-0.01648299,-0.01082447,-0.00086683,0.00348151,-0.00174187,-0.00104583,-0.01308233,0.00473432,0.00828034,-0.00855790,0.00055590,-0.01082950,0.00576241,0.01091538,-0.00109419,
    -0.00402177,-0.01600037,-0.00567659,0.00019687,0.01307856,-0.00089068,0.00388372,-0.00744548,-0.01176499,-0.00329039,-0.01200047,0.01388385,-0.00060711,0.00321917,0.02445858,-0.01049270,0.01081444,-0.02012867,0.00101106,0.01239411,
    -0.01747144,0.02617500,-0.00575318,-0.01214525,-0.00414485,-0.00641582,-0.01779985,0.03196274,-0.01179968,0.00045007,0.00109669,-0.01725222,-0.00557077,-0.00085803,-0.01307924,0.00132059,0.02953631,-0.03785168,0.00297884,-0.00010954,
    0.00832549,0.00738337,-0.01319351,0.00134001,-0.00706709,-0.00543064,-0.01131370,-0.00654399,0.00442064,0.00401477,-0.00073008,-0.01105450,-0.00058028,0.00196780,-0.00752520,-0.00067238,-0.01334929,0.01438905,0.00316126,-0.00430160,
    -0.16937813,5.40519714,1.23341131,0.39734706,-0.23852471,1.31973946,-1.36436903,0.64053369,-0.06978615,-0.23739971,0.41337618,0.44106123,-5.33631992,-1.14092302,0.43086499,0.20358358,-0.59147531,1.61694956,-1.00770593,-0.71773791,
    -1.49639964,-1.26674080,2.51182842,2.26854277,0.35692850,-1.01317573,0.87488437,-1.02597666,0.87642056,1.39361930,0.31659830,1.09896863,-0.59946281,-2.72164178,-0.67987525,0.44776160,-2.64083338,2.72936535,1.19171226,0.81434798,
    0.01434334,-2.83270669,-0.20604962,0.23657778,-1.01270151,2.60230470,-0.42835790,0.43055180,0.40647566,2.89743781,-2.47485828,0.42479134,1.44429398,1.95561385,-1.59053743,0.30991632,-0.88308734,0.35525531,-1.81404483,0.59259021,
    -0.01301889,0.06597225,-0.01780173,-0.00870440,0.00323091,0.00168758,-0.00272737,0.02080747,-0.01600724,0.00985595,0.00548738,-0.02425542,-0.00654611,0.01062746,-0.04756153,0.00266453,0.03301615,-0.01412121,-0.01256502,-0.02099941,
    0.82418865,-0.04564670,2.26815057,-1.55070961,-0.58148408,1.87554049,-1.99543607,-0.35762563,1.33065641,-0.94272083,1.98562753,-0.60091960,-0.01230484,-2.49803352,1.00037086,-1.11159062,1.21315205,1.69310093,-1.37109292,0.26099464,
    0.01284188,-0.03435162,0.01568636,0.01362891,-0.00213855,0.00018288,0.01367831,-0.01389510,0.01644457,-0.01030378,-0.00935845,0.02263170,0.01100603,-0.01245389,0.03179641,0.00489270,-0.03651947,0.01664135,0.00497181,0.01431520,
    -0.00652161,0.05663254,-0.01638754,-0.00625553,0.00685105,0.00013948,-0.01574107,0.00988265,-0.00573874,0.01124032,0.00226799,-0.01955938,-0.00100650,0.00463570,-0.03530947,-0.00545058,0.02707793,0.00637986,0.00399190,-0.01951591,
    -0.01990972,0.04589820,-0.00926216,-0.00436785,-0.00373330,0.00520838,-0.01655130,0.00616672,-0.00998759,0.01391682,0.00083884,-0.00673452,-0.01469021,0.00584056,-0.00816927,-0.00453415,0.02897624,-0.00137416,-0.01188863,-0.01403293,
    -0.00495650,0.03624683,-0.03064268,0.00722987,-0.01067973,0.00304646,-0.01786453,0.00336226,0.00755649,0.00068344,-0.00149445,-0.02673813,-0.02149935,-0.00753088,-0.02234603,-0.00223096,-0.00033090,0.01856020,-0.00181504,-0.01701089,
};
static float l1_bias_array[20] {
    2.72882342,-2.15277958,2.14001989,-0.01341055,0.22207174,0.01457674,-0.01602235,0.00608713,0.00458143,0.01080989,0.00547307,0.10448506,-1.99899495,-1.86144471,0.01868249,0.04128357,-0.00800669,0.00601587,-0.00896278,-0.00321370
};
static float l1_output_array[20];

static const quicknet::matrix_t l1_weights{20,20,l1_weights_array};
static const quicknet::vector_t l1_bias{20,l1_bias_array};
static quicknet::vector_t l1_output{20,l1_output_array};

/******** Layer 2 ********/
static const float l2_weights_array[180] {
    -0.21457301,-0.17098923,-0.00993017,0.13801560,0.26276079,-0.04490592,0.05324138,-0.10370436,0.00712157,0.09835310,-0.13824359,1.44913292,-0.49430832,0.53155047,0.03291810,-0.03816331,0.16613296,0.06470497,0.13439468,-0.14913747,
    0.14698409,0.15276600,-0.05146073,0.13475432,0.07348937,-0.01986057,0.05095496,-0.10385121,0.00974652,0.09041275,-0.13621993,2.02441287,-0.55373079,0.00462047,0.00614491,-0.35873070,0.18585603,0.03385031,0.12247075,-0.17039599,
    0.00523049,0.10577492,0.01612507,0.13224849,-0.40984565,-0.02096283,0.04882885,-0.10591366,0.01060440,0.08829514,-0.13987334,0.61540216,-0.46307620,-0.02063755,-0.00126875,0.44717148,0.19255359,0.02713567,0.11886265,-0.17558463,
    0.30333725,0.36611110,0.63970345,0.14250939,0.11859031,-0.04679184,0.05555551,-0.09758280,0.00608250,0.09811897,-0.13252527,0.60903978,0.03220309,0.35852253,0.01822418,0.25108227,0.17500573,0.04813550,0.13122885,-0.15156376,
    -0.09499267,-0.38974479,0.36299405,0.12622197,0.22555360,-0.01009359,0.04519935,-0.11284262,0.01295782,0.08116964,-0.14468133,0.26681903,0.17710805,-0.20668712,0.00950013,-0.00207829,0.18751734,0.03813534,0.11359611,-0.17878649,
    0.35303980,-0.15072766,-0.17282259,0.12650043,-0.14623494,-0.02489539,0.04790938,-0.10972486,0.01457000,0.07262791,-0.14210938,-0.06510985,-0.00929809,0.32278168,-0.01612505,-0.25964639,0.21002454,0.01084439,0.10865993,-0.19471011,
    0.32250977,-0.18499476,-0.24289049,0.12927447,0.42766374,-0.01855258,0.04952154,-0.10423349,0.01220494,0.07917645,-0.13702460,-0.19329873,-0.33730927,0.13157231,-0.01319833,0.03772802,0.20453140,0.01650668,0.10827653,-0.18867420,
    -0.30347875,0.45600519,-0.21106280,0.13765252,-0.04138908,-0.04621583,0.05230008,-0.10353162,0.01041313,0.08887582,-0.13759091,-0.31837079,-0.30389753,0.30662191,0.00386176,-0.07630456,0.18852369,0.03411248,0.12676208,-0.16208649,
    -0.04964856,-0.07580750,0.58710748,0.13418329,-0.05218009,-0.02278261,0.05162791,-0.10375242,0.00918755,0.09563438,-0.13704912,-0.23924667,-0.94092464,0.14850459,0.02236896,-0.13334072,0.17431366,0.05581322,0.12170449,-0.15541822,
};
static float l2_bias_array[9] {
    -0.81678849,-1.14245677,0.17845257,0.08423743,0.07715806,0.20205577,0.08774009,-0.09153074,-0.30445683
};
static float l2_output_array[9];

static const quicknet::matrix_t l2_weights{9,20,l2_weights_array};
static const quicknet::vector_t l2_bias{9,l2_bias_array};
static quicknet::vector_t l2_output{9,l2_output_array};

/******** Network ********/
static quicknet::Layer layers[3] {
    {l0_weights, l0_bias, l0_output, quicknet::quick_sigmoid},
    {l1_weights, l1_bias, l1_output, quicknet::quick_linear},
    {l2_weights, l2_bias, l2_output, quicknet::quick_softmax},
};

NeuralNetwork::NeuralNetwork() : network{3, layers} {
}

} /* namespace dsme */
