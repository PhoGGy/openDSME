/*
 * openDSME
 *
 * Implementation of the Deterministic & Synchronous Multi-channel Extension (DSME)
 * described in the IEEE 802.15.4-2015 standard
 *
 * Authors: Florian Kauer <florian.kauer@tuhh.de>
 *          Maximilian Koestler <maximilian.koestler@tuhh.de>
 *          Sandrina Backhauss <sandrina.backhauss@tuhh.de>
 *
 * Based on
 *          DSME Implementation for the INET Framework
 *          Tobias Luebkert <tobias.luebkert@tuhh.de>
 *
 * Copyright (c) 2015, Institute of Telematics, Hamburg University of Technology
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "./NeuralNetwork.h"

namespace dsme {

/******** Layer 0 ********/
static const float l0_weights_array[60] {
    -2.50064230,0.88705260,-1.70561457,
    -1.93069637,-5.57784319,0.98360020,
    -3.43142104,-6.32671118,0.89120418,
    -11.51426792,-11.59736061,-1.51957250,
    0.01959054,-4.07893324,1.33989620,
    2.84135962,-1.54834771,1.65428877,
    0.64519340,4.45819235,-1.46706116,
    -2.34136009,1.28968465,-1.49386799,
    2.83613873,5.73762608,-1.35406899,
    -2.78061104,-5.66893816,0.96118546,
    0.41756073,4.55887222,-1.64097917,
    -0.88117522,2.64154482,-1.62082660,
    -1.31601596,1.40710044,-1.79204130,
    5.24685192,8.51214790,-1.05639195,
    -11.36813068,-9.33399582,-1.22626793,
    -5.95898104,-8.08181953,0.61888993,
    2.71660519,-1.48693109,1.48267317,
    -1.17999887,-5.05158997,1.03812265,
    -3.66736984,-5.47541142,1.13284707,
    2.47178388,-1.09260333,1.60452366,
};
static float l0_bias_array[20] {
    0.33443108,-0.07185990,-0.19521888,0.92356074,-0.06802652,-0.30970162,0.21130425,0.07081500,0.18245597,-0.21747857,0.28719568,0.30958349,0.46762329,0.22183582,0.66408551,-0.20458753,-0.26349619,-0.08253968,-0.31104374,-0.31053582
};
static float l0_output_array[20];

static const quicknet::matrix_t l0_weights{20,3,l0_weights_array};
static const quicknet::vector_t l0_bias{20,l0_bias_array};
static quicknet::vector_t l0_output{20,l0_output_array};

/******** Layer 1 ********/
static const float l1_weights_array[400] {
    -1.04682982,0.60362345,0.63395101,-2.31482363,0.64704376,1.45873165,0.00770994,-0.72162747,-0.53069562,0.44721577,-0.74556506,-0.30213419,-0.98402119,-0.17682053,-1.69710815,-0.28434956,0.70234776,0.92646211,0.26811659,1.18575835,
    -0.98824698,0.90718138,0.57258517,-0.38050660,1.31318390,1.31252539,-0.91656768,-1.37722659,-1.01480258,1.05240417,-1.09245586,-1.12234914,-1.00156271,-0.94075727,-0.15880474,0.81428117,1.31551206,0.57851988,0.56243789,1.33340037,
    -1.60716748,0.28149077,0.26276761,-2.33729649,0.77434427,1.39872563,-0.44916472,-1.18692780,0.01353254,0.61535931,-0.56544274,-0.98878270,-0.36104015,-0.07904815,-2.49079680,-0.07326122,1.34991109,0.75077349,0.43956578,1.55009234,
    0.46647745,-0.39639574,-0.38629523,1.08602071,-0.30979121,-0.59025025,0.74352372,0.30272818,0.67247432,-0.61706954,1.01975882,0.49314600,1.05983007,0.66271645,0.75631028,-0.62865287,-0.61034977,-0.57329553,-0.12046930,-0.21963122,
    1.34509969,-0.27609783,-0.44920865,0.82375306,-0.65740669,-0.96304315,0.73122233,0.55013430,0.52050251,-0.16317599,0.84969938,0.67338401,1.00491750,0.71398276,0.31762341,-0.12737255,-0.69461221,-0.59399527,-0.21082088,-0.73134458,
    1.12964237,-0.17103356,-0.34279078,1.55920219,-0.31484401,-0.47819927,1.07044458,0.83579099,1.10318542,-0.15251121,1.21721542,1.43988681,1.48526251,0.82674724,1.14585114,-0.24799135,-0.84795791,-0.73823923,-0.88401753,-0.93859583,
    -1.02154064,0.92883164,0.51910776,1.09815311,0.43120670,1.21911407,-1.17452443,-1.16280878,-0.89958119,1.04974091,-1.26839423,-0.70665479,-0.66355008,-0.78735715,0.85309553,1.17302191,0.59444618,0.24688235,1.02036500,0.48322076,
    0.88764685,-0.57598889,-0.61969066,0.80995864,-0.68937826,-1.18171597,0.26247558,0.93866038,0.67395717,-0.11185896,1.06624937,1.10489440,0.92705959,0.61187494,1.21358263,-0.05040019,-0.83806223,-0.14703892,-0.21074678,-0.60758263,
    1.47756147,-0.58061296,-0.30553791,1.11713970,-0.12855035,-0.65558547,1.10041809,1.17903852,0.92488492,-0.68289435,1.41869187,0.94575655,1.45918059,0.54159987,0.74440801,-0.36428609,-0.54829973,-0.13396674,-0.71943861,-0.86997724,
    0.61347401,-0.20770778,-0.11328864,2.41853404,-0.64586878,-0.99878007,0.37087059,0.76866364,0.12303155,-0.16010748,0.62694019,0.47327000,1.03149271,-0.17838866,1.65855968,0.39822835,-0.94393837,-0.61333013,-0.39018774,-0.76864088,
    -0.21185032,0.79295492,0.33985353,2.44669390,-0.06703366,-0.69996119,-0.26559141,-0.24016395,-1.17573678,0.19125751,-0.78887379,-0.31671628,-0.17090836,-1.03862822,2.37509227,0.39708233,-0.51769269,0.32709274,0.67888522,-0.52083135,
    -0.92705870,0.56023747,0.53882486,-1.31783545,1.20335233,1.36315560,-0.68324447,-0.76028389,-0.62575501,0.28536111,-0.88718563,-0.94409949,-0.92818433,-0.10439219,-0.83377773,0.51037955,0.75956583,0.65033668,0.43945226,0.76305455,
    0.22909746,-0.75435925,-1.07190955,-2.99223042,-0.26614252,0.42662644,1.58418548,0.34993717,2.01241970,-1.06054807,1.84740853,0.98158264,1.19622195,2.14842963,-2.38850880,-1.17519128,0.33753067,-0.65900379,-0.85639298,0.33761761,
    0.58765829,-0.44335231,-0.29140952,2.23866606,-0.81416321,-1.15658057,0.30768871,0.56191748,-0.27937338,-0.19809848,0.50046474,0.35301939,0.86752027,-0.01601330,1.64574158,0.10504611,-0.60071939,-0.25785309,0.06161670,-0.80067116,
    -1.27203453,0.90820861,0.39690381,-1.37185109,1.19757366,1.60861146,-0.93392932,-0.71216977,-0.89676678,0.58226806,-0.96812761,-0.84543645,-1.02615392,0.20007817,-1.34359133,0.27993849,0.89293557,0.84013647,0.79298776,1.07243228,
    -0.41752145,1.18495011,1.28787351,3.11104226,0.32084131,-0.68549025,-1.11179674,-0.53257227,-1.72295427,1.03804708,-1.14777613,-1.26934505,-0.57085741,-1.95735312,1.86037862,1.06456029,-0.53944796,0.71419770,0.96234256,-0.75860244,
    -1.12853885,0.57567668,0.14800516,-2.24404359,0.84365094,1.03751063,-0.25516754,-0.81987178,-0.13707614,0.33377603,-0.65910852,-0.56567729,-0.72736013,0.09324713,-2.12537313,0.13417888,1.15981150,0.29340658,-0.09588808,1.08256364,
    -0.35136548,0.52603602,1.19751406,3.10557175,0.04321522,-0.27991435,-1.42067051,-0.17718291,-1.36812067,0.70615005,-1.58356583,-1.01307547,-1.06307173,-2.13927722,2.42422962,1.41456187,-0.69409204,0.77894318,1.00846112,-0.31047720,
    -0.93052894,1.04113913,0.94108313,-1.79597723,1.16235578,1.30473125,-0.88398910,-0.89372748,-0.72051662,0.58969963,-0.77490008,-0.83380133,-0.75057888,0.02650121,-1.62742817,0.67878109,0.92873186,0.67684627,1.06789315,0.88861734,
    1.49865985,-0.57766151,-0.59743655,1.59921384,-0.33939433,-0.95542973,1.11080456,0.70028019,0.75531906,-0.60213500,1.20758498,1.37362337,1.00929821,0.35579371,1.34568477,-0.30535594,-0.43637523,-0.59973240,-0.72610760,-0.44754156,
};
static float l1_bias_array[20] {
    0.27866223,0.08101246,0.31488177,-0.15251172,-0.07083988,-0.10600851,-0.33576322,-0.12502702,0.03746292,-0.21583059,-0.37049079,0.26476145,0.52545172,-0.23846333,0.33386135,-0.61397642,0.23727225,-0.54030502,0.40699789,-0.00575494
};
static float l1_output_array[20];

static const quicknet::matrix_t l1_weights{20,20,l1_weights_array};
static const quicknet::vector_t l1_bias{20,l1_bias_array};
static quicknet::vector_t l1_output{20,l1_output_array};

/******** Layer 2 ********/
static const float l2_weights_array[400] {
    -0.10272868,0.22274363,-0.77644694,0.19915217,0.25223556,-0.13581800,-0.03237585,0.14075664,0.11524238,0.44043958,0.55015707,0.11954740,-0.40326771,0.58254766,-0.08404142,0.29571348,-0.64305013,-0.10717893,-0.04378238,-0.18721712,
    -1.25460196,-0.70215857,-0.93264574,0.59330118,0.86074805,1.15368259,-0.16547307,0.84230167,1.22105801,0.98427057,0.55822247,-1.02547097,-1.77264786,1.13198340,-1.06099701,0.47119945,-1.13338149,0.86083972,-0.23261571,1.20847416,
    0.07391036,0.97823060,0.53865880,-0.45156166,0.12847260,-0.23557207,0.47884628,-0.41139629,0.16812636,-0.23015822,0.08133754,1.13578773,-0.21484672,0.06140629,1.22249830,-0.23045065,0.27489665,0.46490875,0.70816523,0.09313852,
    -1.06391656,-0.15928027,-1.31394112,-0.14853674,-0.22472379,0.00876080,0.22354402,0.25793675,0.22262767,0.50522727,0.30841231,-0.31542706,-1.24872434,-0.20129701,-0.27988902,0.46144980,-1.42096853,0.71116304,-0.02087300,0.28008461,
    0.61438972,0.20438296,0.18956608,-0.09742173,-0.25127175,-0.64611399,-0.47862887,-0.89978772,-0.49730325,-1.87919891,-1.67642832,0.55996251,1.68095911,-1.41473413,0.27106386,-1.02548993,1.09852922,-1.68684888,-0.16712852,-0.50463682,
    -2.31492734,-2.14591837,-1.89134490,0.16169652,0.88171828,0.29390064,-0.66367829,0.98511386,0.48802242,0.40614721,0.10959309,-2.49410844,-0.22622105,0.81894904,-2.64497924,-0.22984596,-2.00063252,-0.30391786,-2.40307260,0.54403657,
    2.65741825,0.74027824,2.17904949,-0.81767493,-1.29464734,-0.72641981,0.15538806,-1.91534781,-1.35755193,-1.04910648,-0.90977395,2.61748219,-1.52124238,-1.52758217,2.53880501,0.19627342,2.37389255,0.26491976,1.78071105,-1.24179745,
    -0.29933834,-0.07864909,-0.55244863,0.19210288,-0.23362176,0.22178787,-0.05665318,-0.45457622,0.08145181,0.09960577,0.63177973,-0.44819334,-1.94281721,0.37574571,0.05413606,0.59559274,-0.73257357,0.69128788,-0.00086062,0.38520813,
    0.91012162,0.33518451,0.33056384,-0.77915233,-1.74415934,-2.07036853,-0.38431707,-2.10093474,-2.25351143,-1.32907414,-0.23073705,1.14087784,-1.77607715,-0.56840932,1.01897001,0.09736385,1.16213322,0.03643697,0.02381863,-2.33654070,
    1.07794535,0.51877308,0.58339000,-0.70098883,-1.07921743,-1.12622416,-0.00452294,-1.41392279,-1.10202885,-1.48122776,-0.68535781,0.94470000,0.35732386,-0.97950673,0.42319191,-0.41216409,1.05147874,-0.00879402,0.36978969,-1.64247644,
    -0.99447584,0.73237771,-0.96653825,-0.45141271,-0.45590615,0.11602388,0.43520638,-0.69111919,-0.28233096,0.52398521,1.38525879,-0.15558366,-4.17510891,0.20825052,-0.38570112,2.49155140,-0.94512457,2.82365394,-0.52182013,-0.05873893,
    1.16598141,0.38060412,0.70123875,-0.02625505,-0.10739215,-0.04200402,0.07625235,-0.17540924,-0.71238810,-0.81790602,-0.04227597,0.69308984,0.63391340,-0.26981369,0.89451993,-0.85187888,1.10781515,-0.67476797,0.66385722,-0.87812793,
    0.86297733,1.78812480,0.23963425,-0.80980426,-0.58749539,-0.53405041,0.78445923,-1.46038842,-0.69029164,-0.48443013,0.45588750,1.52174580,-2.53518438,-0.65859348,1.58872998,1.69164431,0.02284543,1.50365794,0.90244746,-0.54463750,
    -1.80626452,-2.43937469,-2.57854342,0.06382579,0.31811225,0.40434897,-1.37940764,0.92771643,0.46174788,0.62399626,-0.67324096,-2.17499804,1.55546355,0.03841572,-1.82571375,-3.88892913,-1.81480551,-4.13935804,-1.17862952,0.38248867,
    -0.11637906,-0.14571206,-0.28516856,0.31824729,0.14729629,-0.16587509,-0.02420015,-0.09108976,0.23493858,0.63538116,0.79994589,-0.11809070,-1.08785284,0.10235232,-0.05558785,0.95100695,-0.09859763,0.73603278,-0.23297778,0.07001986,
    -0.75591087,-2.01973867,-0.55569369,0.72823608,0.87751108,0.61124039,-0.63078052,0.82017583,0.13299194,0.59884566,-0.69272643,-1.82368255,2.13359022,-0.08702245,-1.62669706,-1.68992019,-0.86432624,-1.32869506,-1.08095562,0.49720475,
    0.25062096,0.26835316,-0.30116883,-0.45531902,0.04189508,-0.22975858,-0.37618634,-0.37664261,-0.44966385,-0.10163689,-0.81940740,0.02965367,1.00141966,0.32104513,0.21316878,-0.74820751,-0.16723919,-1.05805171,0.18698536,-0.48955491,
    -0.62761706,-2.45364642,-0.77011770,0.08928812,0.44143963,0.17501695,-2.89446640,0.20278317,0.37193832,0.69970900,-1.20826590,-0.84058690,1.42641497,0.36049423,-0.64687562,-3.67139626,-0.01876401,-3.49547887,-1.01233387,0.71723568,
    0.37031323,0.11600618,-0.18426682,-0.93728822,-0.65520316,-1.02132559,0.18424164,-0.74263787,-1.39245737,-0.36288834,0.85666561,1.00576460,-4.33659220,-0.05071643,0.62943739,0.86983567,0.09863771,1.18624210,-0.14005357,-0.75816751,
    0.31570289,0.25600761,0.88490325,-0.22276209,-0.16890912,-0.56372482,-0.20853074,-0.75340885,-0.21709792,-0.87694150,-0.67290974,0.26624838,0.91099131,-0.50378716,0.59190381,-0.88743204,0.81571198,-0.73657095,0.90498692,-0.43731552,
};
static float l2_bias_array[20] {
    -0.05415079,0.01056452,-0.07995274,-0.21904141,-0.01862697,-0.03784146,-0.15209469,-0.08316754,-0.30020338,-0.19293462,-0.17206603,-0.01357071,-0.41355225,-0.10552568,0.07773641,0.11586982,-0.12754145,0.30325297,-0.34322026,-0.03005908
};
static float l2_output_array[20];

static const quicknet::matrix_t l2_weights{20,20,l2_weights_array};
static const quicknet::vector_t l2_bias{20,l2_bias_array};
static quicknet::vector_t l2_output{20,l2_output_array};

/******** Layer 3 ********/
static const float l3_weights_array[300] {
    -0.34511316,-1.11882234,-0.31727222,0.35339049,1.19677782,2.08807945,-0.47547129,-0.67838740,0.79945481,0.81546593,-1.27640092,-0.84212166,-0.26129410,-6.10161066,0.02203868,0.89872551,0.12276089,-6.76368332,-0.30179873,0.06224950,
    -1.72528970,-2.70584393,-2.72097778,-0.98640752,-0.14578964,-1.43772793,-1.06933475,-1.18778491,-1.17312181,-0.29217380,-1.38555932,-1.26968753,-1.91586709,-1.06470919,-2.25168872,-1.66851974,-1.09501064,-1.21028697,-0.70226514,-2.07879496,
    -0.32687306,-0.00224752,-0.20653179,0.20892331,-0.22142270,1.06736505,-0.15564308,0.34045726,-1.40191400,-0.20537421,0.53918272,-0.06585263,-0.04049357,-3.45748663,0.34858847,0.56364298,-0.79679251,-0.68580645,0.04975006,-0.21082854,
    0.23943140,0.47730991,-0.00260497,0.09896355,0.04363933,0.46393639,1.14005864,0.41577786,-1.01940238,-0.60923862,0.66601390,0.03140417,-0.36593947,1.38907707,0.17706607,-0.26519281,0.04111585,0.89166790,0.76622570,-0.00117328,
    0.14866535,-0.04916404,0.03375186,-0.10683193,-1.34784734,0.90387541,0.70241940,0.38395441,0.50801164,-0.22096604,0.04264599,0.38336900,-0.25738204,0.56556511,0.55006200,0.56965405,-0.17529111,-0.05977943,0.57941562,-0.23196709,
    -0.22182892,0.40878591,0.02773514,0.08344634,0.09570399,-0.78158438,0.59579730,0.43527740,-0.30295780,-0.42052352,0.63645411,0.13326225,0.03999360,-1.32976198,-0.00056419,0.58116031,-0.07931852,0.46651807,0.09716311,0.01403274,
    -0.31441769,0.15926291,0.42145064,0.57411313,1.64209807,-1.91858590,-1.38773727,0.01944046,0.38284987,0.67795080,0.16629672,0.24002652,-0.08548444,-0.45868805,-0.69075185,0.05616194,0.90189767,-0.54033852,-0.86954188,0.80463099,
    0.12467287,-0.16228037,0.23740885,-0.15857241,-0.82632583,0.39885622,0.18389250,-0.36342710,0.51462132,0.57037950,-0.40102839,0.21935862,0.00542818,-2.34257054,0.23271246,0.92692620,0.36758539,-1.43254781,0.21743757,0.50304872,
    -0.31078699,0.72558916,-0.34806556,-0.52625620,1.10488796,-0.87320435,0.71382540,0.01938200,-0.90347421,-0.26987737,0.61620080,0.09207600,0.75545937,-0.39480916,-0.32682696,-1.23986042,0.16534680,-0.86977583,0.01980366,-0.39261541,
    0.16264260,0.06788787,-0.51732123,-0.83925885,-0.49770266,-0.90595746,0.44500345,-0.52659965,-0.34822103,0.58280426,-2.80362272,0.65774620,0.45117167,1.13454521,-0.80452448,-0.75812453,0.22011463,0.43040168,-1.48554647,0.89571100,
    -0.03063166,-0.74768978,-0.17605343,0.05388994,0.00150264,0.53376043,0.04399890,-0.02904678,0.14812572,0.16921963,0.83497512,0.48152706,-0.20202680,-0.56462544,-0.01926075,-0.36769399,0.22136308,-0.81726784,0.59797925,0.19741347,
    0.23675227,0.00935516,-0.01735220,-0.77227890,-2.52449965,-1.45556259,0.12739429,-0.25408429,-12.46599579,-7.87665796,-4.94367695,0.17152791,0.14614919,0.67057121,-0.41507313,-0.81366992,-0.42944723,0.19821121,-5.33665085,0.01256008,
    -0.56511289,-0.49744540,-0.67920011,-0.23886593,-0.36720243,0.47277805,-7.39348650,0.15482230,-1.90253913,-1.73611140,-8.36817360,-0.04988232,-7.30124283,1.15071988,-0.97913873,0.23060541,-0.30816993,0.12521981,-1.31664169,-0.44277325,
    0.40322071,-0.18767942,0.30419630,0.53809464,0.58107364,-0.47211757,-1.56777537,0.09108572,1.55329418,1.24795592,0.52343708,-0.44128287,1.05832410,1.06090367,0.14542462,-1.02086937,0.09589314,-0.15559518,0.14861752,-0.47007051,
    -2.14713669,-2.67313218,-2.49985766,-1.60983956,-0.17158538,-1.29548717,-1.36144853,-1.72219157,-0.50749809,-0.23963010,-1.06115592,-1.79352462,-1.56534767,-0.62440568,-1.60811353,-1.47364163,-1.63558483,-1.26076102,-0.11436633,-2.22621536,
};
static float l3_bias_array[15] {
    -0.18081981,-1.92744458,-0.25765532,0.08729827,0.17470527,0.01027092,0.11441551,0.22909901,-0.06039559,-0.14982906,0.12072936,-0.15901443,-0.40939420,0.21789543,-1.88509929
};
static float l3_output_array[15];

static const quicknet::matrix_t l3_weights{15,20,l3_weights_array};
static const quicknet::vector_t l3_bias{15,l3_bias_array};
static quicknet::vector_t l3_output{15,l3_output_array};

/******** Network ********/
static quicknet::Layer layers[4] {
    {l0_weights, l0_bias, l0_output, quicknet::quick_sigmoid},
    {l1_weights, l1_bias, l1_output, quicknet::quick_sigmoid},
    {l2_weights, l2_bias, l2_output, quicknet::quick_sigmoid},
    {l3_weights, l3_bias, l3_output, quicknet::quick_softmax},
};

NeuralNetwork::NeuralNetwork() : network{4, layers} {
}

} /* namespace dsme */
